{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/blogStart.md","hash":"a8720cb0629a525dcd1a0c6e31931ccce58e1a57","modified":1652161855136},{"_id":"source/_posts/deepin.md","hash":"e05442e50c6253cb053754792fb69abc3197c06e","modified":1652161855136},{"_id":"source/_posts/getBingPic.md","hash":"56c80990a197299fe1f4d4ea2a6c00770e14c121","modified":1652161855136},{"_id":"source/CNAME","hash":"4961818822b2a4e422e33fda761682ac846b2a46","modified":1652177187998},{"_id":"source/_posts/postgis.md","hash":"ac0cad63d1c0e07ee5f1945177eedc0913b60537","modified":1652161855137},{"_id":"source/_posts/travis.md","hash":"62e4f78597cb0e455875e39c674f237ed8e042cb","modified":1652161855137},{"_id":"source/_posts/startReact.md","hash":"a1a6867e69344a1079d46bcd9cfe56717b05f8d2","modified":1652161855137},{"_id":"source/categories/index.md","hash":"6e3ed70dfbbbf16ea6e5b14663c371bdfe691407","modified":1652161855137},{"_id":"source/tags/index.md","hash":"f6c40442ad85c07dc711119c3db934d22b162dc7","modified":1652161855137},{"_id":"source/about/index.md","hash":"332e67e9ef63eb38d604cd7928d773b19185c5b9","modified":1652166061434},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1652164967460},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1652164967463},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1652164967463},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1652164967460},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1652164967460},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1652164967463},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1652164967463},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1652164967463},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1652164967464},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1652164967482},{"_id":"themes/next/_config.yml","hash":"db5eebce2fdb28e199644a5f807f7bb07571951a","modified":1652173109268},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1652164967469},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1652164967460},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1652164967461},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1652164967462},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1652164967461},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1652164967462},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1652164967462},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1652164967462},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1652164967462},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1652164967462},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1652164967463},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1652164967465},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1652164967465},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1652164967462},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1652164967465},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1652164967466},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1652164967466},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1652164967466},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1652164967466},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1652164967466},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1652164967466},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1652164967472},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1652164967482},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1652164967482},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1652164967482},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1652164967482},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1652164967482},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1652164967482},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1652164967469},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1652164967469},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1652164967470},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1652164967470},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1652164967470},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1652164967470},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1652164967470},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1652164967470},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1652164967470},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1652164967470},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1652164967470},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1652164967471},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1652164967471},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1652164967471},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1652164967471},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1652164967471},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1652164967471},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1652164967471},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1652164967472},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1652164967486},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1652164967472},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1652164967472},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1652164967472},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1652164967461},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1652164967461},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1652164967461},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1652164967461},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1652164967467},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1652164967467},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1652164967467},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1652164967467},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1652164967467},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1652164967468},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1652164967468},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1652164967468},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1652164967468},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1652164967468},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1652164967469},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1652164967469},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1652164967469},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1652164967472},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1652164967473},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1652164967476},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1652164967473},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1652164967476},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1652164967477},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1652164967477},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1652164967478},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1652164967477},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1652164967479},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1652164967480},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1652164967480},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1652164967473},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1652164967473},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1652164967474},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1652164967483},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1652164967485},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1652164967485},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1652164967485},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1652164967485},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1652164967485},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1652164967486},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1652164967486},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1652164967486},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1652164967486},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1652164967486},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1652164967487},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1652164967487},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1652164967487},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1652164967487},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1652164967487},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1652164967487},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1652164967487},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1652164967488},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1652164967476},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1652164967488},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1652164967474},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1652164967500},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1652164967488},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1652164967497},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1652164967500},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1652164967500},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1652164967501},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1652164967501},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1652164967501},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1652164967501},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1652164967501},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1652164967501},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1652164967502},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1652164967502},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1652164967502},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1652164967502},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1652164967502},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1652164967502},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1652164967505},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1652164967502},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1652164967502},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1652164967503},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1652164967503},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1652164967504},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1652164967476},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1652164967477},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1652164967477},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1652164967477},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1652164967477},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1652164967478},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1652164967478},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1652164967478},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1652164967478},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1652164967478},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1652164967478},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1652164967479},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1652164967479},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1652164967479},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1652164967479},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1652164967479},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1652164967480},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1652164967480},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1652164967480},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1652164967480},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1652164967480},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1652164967479},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1652164967481},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1652164967481},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1652164967481},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1652164967481},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1652164967480},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1652164967481},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1652164967481},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1652164967481},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1652164967473},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1652164967473},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1652164967473},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1652164967474},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1652164967474},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1652164967474},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1652164967474},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1652164967474},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1652164967474},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1652164967475},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1652164967475},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1652164967475},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1652164967475},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1652164967475},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1652164967475},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1652164967475},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1652164967483},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1652164967483},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1652164967483},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1652164967484},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1652164967484},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1652164967484},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1652164967484},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1652164967484},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1652164967484},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1652164967485},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1652164967485},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1652164967476},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1652164967476},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1652164967500},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1652164967499},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1652164967500},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1652164967500},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1652164967504},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1652164967500},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1652164967504},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1652164967506},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1652164967506},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1652164967488},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1652164967488},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1652164967493},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1652164967493},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1652164967488},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1652164967491},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1652164967494},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1652164967494},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1652164967495},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1652164967495},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1652164967495},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1652164967495},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1652164967496},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1652164967497},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1652164967497},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1652164967497},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1652164967497},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1652164967497},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1652164967497},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1652164967498},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1652164967498},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1652164967498},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1652164967498},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1652164967498},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1652164967498},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1652164967499},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1652164967499},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1652164967499},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1652164967499},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1652164967499},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1652164967499},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1652164967499},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1652164967505},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1652164967506},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1652164967489},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1652164967489},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1652164967489},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1652164967489},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1652164967489},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1652164967489},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1652164967489},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1652164967489},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1652164967490},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1652164967490},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1652164967490},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1652164967490},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1652164967490},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1652164967490},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1652164967490},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1652164967490},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1652164967491},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1652164967491},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1652164967491},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1652164967491},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1652164967491},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1652164967491},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1652164967491},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1652164967492},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1652164967493},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1652164967493},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1652164967493},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1652164967493},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1652164967494},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1652164967494},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1652164967494},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1652164967494},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1652164967494},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1652164967494},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1652164967492},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1652164967492},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1652164967492},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1652164967492},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1652164967492},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1652164967493},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1652164967495},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1652164967493},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1652164967495},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1652164967495},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1652164967495},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1652164967496},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1652164967496},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1652164967496},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1652164967496},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1652164967496},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1652164967496},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1652164967496},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1652164967505},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1652164967506},{"_id":"themes/next/source/images/avatar.jpg","hash":"90fa14244a6f26e2b8bbba230acf7819b28733e7","modified":1652165909000},{"_id":"public/baidusitemap.xml","hash":"b7158d12a572823bba5917a0975e3028f3075594","modified":1652265320976},{"_id":"public/search.xml","hash":"7730e475428778d6ee0c6a7c717aaba2a311e9c9","modified":1652265320976},{"_id":"public/sitemap.xml","hash":"cedd693c5200d7f45b950c570b9ba2cff86b03a6","modified":1652265320976},{"_id":"public/categories/index.html","hash":"df070799ffa690b5948e5ae1c51341c1dc4fb75c","modified":1652265320976},{"_id":"public/tags/index.html","hash":"4d0fa8c6a1762422a904dfa5428e299811177db7","modified":1652265320976},{"_id":"public/about/index.html","hash":"bf4c741b3f3e6cae301080b76c5e5fc2b26af47c","modified":1652265320976},{"_id":"public/archives/index.html","hash":"a84395d9e6c60f9dab2ef8002aebdd6b4ed5e597","modified":1652265320976},{"_id":"public/archives/2017/index.html","hash":"52ca7ffd6dc5c9ebb0b4807c4f64c092847126c9","modified":1652265320976},{"_id":"public/archives/2017/04/index.html","hash":"08a6123a8c28239741d28f9e6d47c6c89f8ef493","modified":1652265320976},{"_id":"public/archives/2017/05/index.html","hash":"a01f4b6cbfecaafb6b73570e13025820aeef79d3","modified":1652265320976},{"_id":"public/archives/2017/12/index.html","hash":"b27238dd99ab40a38ffee319a6af064f78a3516a","modified":1652265320976},{"_id":"public/archives/2018/index.html","hash":"f1814e13f369ec5cb19c659e692c742cd94a14c6","modified":1652265320976},{"_id":"public/archives/2018/02/index.html","hash":"462762a43920a48ca6d6c4d231f36fc75bdf142b","modified":1652265320976},{"_id":"public/categories/前端/index.html","hash":"e0d64279e582629766c933043e8734cbb1db9e4e","modified":1652265320976},{"_id":"public/categories/linux/index.html","hash":"14771600d8e141ab5a3a2bd9a92fdfec22978d55","modified":1652265320976},{"_id":"public/categories/GIS/index.html","hash":"0d885f6848bb1c0241db0b50d70c68a36a4c0a56","modified":1652265320976},{"_id":"public/categories/前端/hexo/index.html","hash":"073db91db29eae76c72cf7e32dcfc5cc301bf7f1","modified":1652265320976},{"_id":"public/categories/front-end/index.html","hash":"a0198b2eab731329fc0fb58cc00fadb8edc0a353","modified":1652265320976},{"_id":"public/categories/前端/nodejs/index.html","hash":"a4a43b4ee1f387450a47410fc5170c44f530ab12","modified":1652265320976},{"_id":"public/categories/GIS/数据库/index.html","hash":"cb08fbc6a478d508651a18e1d98ba4bcb5dc8b3d","modified":1652265320976},{"_id":"public/tags/前端/index.html","hash":"6f3c20b3a580133d25f1c1ab97130a4d2b0bab15","modified":1652265320976},{"_id":"public/tags/hexo/index.html","hash":"1642b1046290f169483c1a8cd05fa576ab0946a2","modified":1652265320976},{"_id":"public/tags/linux/index.html","hash":"b842ff347d5334bd63138631432019dc4567e10b","modified":1652265320976},{"_id":"public/tags/nodejs/index.html","hash":"bd92c3595101280f8b39124606df8197e9a7587c","modified":1652265320976},{"_id":"public/tags/soft/index.html","hash":"874e6e52a1447a330c6736e5814bc83731a8298f","modified":1652265320976},{"_id":"public/tags/git/index.html","hash":"79d5158b8bd9b182a9798a75ca1cad7424ce4d83","modified":1652265320976},{"_id":"public/tags/GIS/index.html","hash":"fad6a1d8bd76e1805f58a2a23af35e8f4d57d1ab","modified":1652265320976},{"_id":"public/tags/react/index.html","hash":"b3c40af1c2186b74f8a77efd450ad4990946379f","modified":1652265320976},{"_id":"public/tags/webpack/index.html","hash":"7af13c8445375ba2aba38f0536702adf6e007de0","modified":1652265320976},{"_id":"public/tags/持续集成/index.html","hash":"5be96145054984d5f2cc9f2753c00c070118e1f6","modified":1652265320976},{"_id":"public/tags/github/index.html","hash":"cefc699ebb254dcfa9de8fdcd38ecb3c01953732","modified":1652265320976},{"_id":"public/2018/02/26/startReact/index.html","hash":"a731cfe21e07bfdc8e7a3ac59ac3b6bc0769e951","modified":1652265320976},{"_id":"public/2017/12/11/deepin/index.html","hash":"4f3f1ce0f568216a98f3ac2d5055b2a28b7e25b7","modified":1652265320976},{"_id":"public/2017/05/18/postgis/index.html","hash":"cb1c7424f64a066cb3c83acfad7d3bc117fab6f6","modified":1652265320976},{"_id":"public/2017/04/09/getBingPic/index.html","hash":"5cd1a898be2fb00c9420902871d4597becd39657","modified":1652265320976},{"_id":"public/2017/04/08/travis/index.html","hash":"19bd8cf126a983bb769c6c66fbe9e0e4f510e6c5","modified":1652265320976},{"_id":"public/2017/04/08/blogStart/index.html","hash":"5c841103a2537cfeaf7567fa0072a65c0bf934e8","modified":1652265320976},{"_id":"public/index.html","hash":"fe66a9abeb170d94cc0045c824d5411d3c41e343","modified":1652265320976},{"_id":"public/CNAME","hash":"4961818822b2a4e422e33fda761682ac846b2a46","modified":1652265320976},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1652265320976},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1652265320976},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1652265320976},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1652265320976},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1652265320976},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1652265320976},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1652265320976},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1652265320976},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1652265320976},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1652265320976},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1652265320976},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1652265320976},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1652265320976},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1652265320976},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"284416885e4e80e27fa4eae6fc305f4de15b914c","modified":1652265320976},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1652265320976},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1652265320976},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"e56ad6b82caf69066de545201014291fc961635e","modified":1652265320976},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"a3b131a9a47ccc16f4dd8988fabb6d306548db2f","modified":1652265320976},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1652265320976},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1652265320976},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1652265320976},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1652265320976},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1652265320976},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1652265320976},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1652265320976},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1652265320976},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1652265320976},{"_id":"public/css/main.css","hash":"2a542b15c6843d608de09b813ba762376f8638b6","modified":1652265320976},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1652265320976},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1652265320976},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1652265320976},{"_id":"public/images/avatar.jpg","hash":"90fa14244a6f26e2b8bbba230acf7819b28733e7","modified":1652265320976},{"_id":"public/assets/algolia/algoliasearch.js","hash":"6948fcdf071e4983e784e8c458cf201536f77792","modified":1652265320976}],"Category":[{"name":"前端","_id":"cl31g417t0004vk6b8tqdb4ke"},{"name":"linux","_id":"cl31g417x000avk6bdbnw3lh6"},{"name":"GIS","_id":"cl31g4185000hvk6bem1c40df"},{"name":"hexo","parent":"cl31g417t0004vk6b8tqdb4ke","_id":"cl31g4187000kvk6b30tigf7i"},{"name":"front-end","_id":"cl31g4188000mvk6b5cfm69rn"},{"name":"nodejs","parent":"cl31g417t0004vk6b8tqdb4ke","_id":"cl31g418c000tvk6b848pewst"},{"name":"数据库","parent":"cl31g4185000hvk6bem1c40df","_id":"cl31g418e0010vk6b4zp782p9"}],"Data":[],"Page":[{"title":"categories","date":"2017-04-08T05:51:59.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-04-08 13:51:59\npermalink: /categories/\ntype: categories\n---\n","updated":"2022-05-10T05:50:55.137Z","path":"/categories/index.html","comments":1,"layout":"page","_id":"cl31g417m0000vk6b7bs622oq","content":"","site":{"data":{}},"excerpt":"","more":""},{"date":"2017-04-08T05:52:43.000Z","title":"Tags","type":"tags","_content":"","source":"tags/index.md","raw":"---\ndate: 2017-04-08 13:52:43\ntitle: Tags\ntype: tags\npermalink: /tags/\n---","updated":"2022-05-10T05:50:55.137Z","path":"/tags/index.html","comments":1,"layout":"page","_id":"cl31g417r0002vk6bb3zc3z3z","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2017-04-08T05:46:18.000Z","type":"about","_content":"\n\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-04-08 13:46:18\ntype: about\n---\n\n\n","updated":"2022-05-10T07:01:01.434Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl31g417u0006vk6bdhurbqk7","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"怎样快速搭建一个博客","date":"2017-04-08T04:11:50.000Z","_content":"\n# 简介：\n\nhexo是一款基于Node.js的静态博客框架，他可以方便的生成静态网页，\n而且不需要你去关注页面布局这些问题，只需要专注于内容。\n\n<!--more-->\n\n# 必要环境\n\n* 首先要安装 [Node.js](https://nodejs.org/en/download/)， Node.js 自带了软件包管理器 npm，hexo 需要 Node.js v0.6 以上支持，建议使用最新版 Node.js。\n* 装完node后可以测试一下是否安装成功,命令窗口执行下面命令能正确输出版本号则安装成功。\n```bash\nnode -v\n```\n* 配置完之后建议将包地址换为国内淘宝镜像源。\n```bash\nnpm config set registry https://registry.npm.taobao.org\n// 配置后可通过下面方式来验证是否成功\nnpm config get registry\n// 或npm info express\n```\n\n* 全局安装hexo脚手架工具和hexo\n\n```bash\nnpm i -g hexo-cli\nnpm i -g hexo\n```\n\n* 常用命令\n\n> 1、 help ： 查看帮助信息\n  2、 init [文件夹名] ： 创建一个hexo项目，不指定文件夹名，则在当前目录创建\n  3、 version ： 查看hexo的版本\n  4、 --config config-path ：指定配置文件，代替默认的_config.yml\n  5、 --cwd cwd-path ：自定义当前工作目录\n  5、 --debug ：调试模式，输出所有日志信息\n  6、 --safe ：安全模式，禁用所有的插件和脚本\n  7、 --silent ：无日志输出模式\n  8、 generate ：编译输出静态文件\n  9、 clean ：清空编译后的缓存和文件\n  10、server ：开启本地服务器\n  11、deploy ：部署\n\n# 开始创建\n\n```bash\nhexo init myBlog\n```\n\n执行上述命令后会创建一个模板出来，剩下的就需要自己去改了\n\n# 添加文章\n\n文章会自动生成在博客目录下source/_posts/start.md\n\n```bash\nhexo new \"start\"  #新建博文,其中start是博文题目\n```\n\n```bash\n  ---\n  title: 怎样快速搭建一个博客\n  date: 2017-04-08 12:11:50\n  tags: hexo\n  ---\n```\n---\n\n# 主题\n\nHexo提供了官网的主题, 初始化hexo时也会自动生成一个主题, Hexo还支持个性定制主题, 可以根据自己的喜好对主题进行修改, 更多主题可以在官网中找到[themes](https://hexo.io/themes/)\n更改方法如下\n\n```bash\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n\n#在./_config.yml，修改主题为next\ntheme: writing\n\n#查看本地效果\nhexo g       #hexo generate简写\nhexo s       #hexo server简写\n```\n更多设置请查看[next主题官网](http://theme-next.iissnan.com/)\n\n# 部署到github\n注意修改配置文件中的deploy配置。\n```bash\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: https://github.com/sakitam-fdd/sakitam-fdd.github.io.git\n```\n\n然后执行\n```bash\nhexo deploy  #进行部署\n\nInitialized empty Git repository in E:\\codeRepository\\github\\website/.deploy/.git/\n[master (root-commit) bb3079b] First commit\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 placeholder\n[info] Clearing .deploy folder...\n[info] Copying files from public folder...\n[master 6e24e8d] Site updated: 2017-04-08 11:16:23\n 172 files changed, 34969 insertions(+)\n create mode 100644 2017/04/08/Hello-World/index.html\n ...\n create mode 100644 \"tags/\\345\\277\\203\\350\\267\\257\\346\\234\\255\\350\\256\\260/index.html\"\nTo git@github.com/sakitam-fdd/sakitam-fdd.github.io.git\n + 11237d0...6e24e8d master -> master (forced update)\nBranch master set up to track remote branch master from git@github.com/sakitam-fdd/sakitam-fdd.github.io.git\n[info] Deploy done: github\n\n#表示部署成功\n```\n","source":"_posts/blogStart.md","raw":"---\ntitle: 怎样快速搭建一个博客\ndate: 2017-04-08 12:11:50\ncategories:\n- 前端\n- hexo\ntags:\n- 前端\n- hexo\n---\n\n# 简介：\n\nhexo是一款基于Node.js的静态博客框架，他可以方便的生成静态网页，\n而且不需要你去关注页面布局这些问题，只需要专注于内容。\n\n<!--more-->\n\n# 必要环境\n\n* 首先要安装 [Node.js](https://nodejs.org/en/download/)， Node.js 自带了软件包管理器 npm，hexo 需要 Node.js v0.6 以上支持，建议使用最新版 Node.js。\n* 装完node后可以测试一下是否安装成功,命令窗口执行下面命令能正确输出版本号则安装成功。\n```bash\nnode -v\n```\n* 配置完之后建议将包地址换为国内淘宝镜像源。\n```bash\nnpm config set registry https://registry.npm.taobao.org\n// 配置后可通过下面方式来验证是否成功\nnpm config get registry\n// 或npm info express\n```\n\n* 全局安装hexo脚手架工具和hexo\n\n```bash\nnpm i -g hexo-cli\nnpm i -g hexo\n```\n\n* 常用命令\n\n> 1、 help ： 查看帮助信息\n  2、 init [文件夹名] ： 创建一个hexo项目，不指定文件夹名，则在当前目录创建\n  3、 version ： 查看hexo的版本\n  4、 --config config-path ：指定配置文件，代替默认的_config.yml\n  5、 --cwd cwd-path ：自定义当前工作目录\n  5、 --debug ：调试模式，输出所有日志信息\n  6、 --safe ：安全模式，禁用所有的插件和脚本\n  7、 --silent ：无日志输出模式\n  8、 generate ：编译输出静态文件\n  9、 clean ：清空编译后的缓存和文件\n  10、server ：开启本地服务器\n  11、deploy ：部署\n\n# 开始创建\n\n```bash\nhexo init myBlog\n```\n\n执行上述命令后会创建一个模板出来，剩下的就需要自己去改了\n\n# 添加文章\n\n文章会自动生成在博客目录下source/_posts/start.md\n\n```bash\nhexo new \"start\"  #新建博文,其中start是博文题目\n```\n\n```bash\n  ---\n  title: 怎样快速搭建一个博客\n  date: 2017-04-08 12:11:50\n  tags: hexo\n  ---\n```\n---\n\n# 主题\n\nHexo提供了官网的主题, 初始化hexo时也会自动生成一个主题, Hexo还支持个性定制主题, 可以根据自己的喜好对主题进行修改, 更多主题可以在官网中找到[themes](https://hexo.io/themes/)\n更改方法如下\n\n```bash\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n\n#在./_config.yml，修改主题为next\ntheme: writing\n\n#查看本地效果\nhexo g       #hexo generate简写\nhexo s       #hexo server简写\n```\n更多设置请查看[next主题官网](http://theme-next.iissnan.com/)\n\n# 部署到github\n注意修改配置文件中的deploy配置。\n```bash\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: https://github.com/sakitam-fdd/sakitam-fdd.github.io.git\n```\n\n然后执行\n```bash\nhexo deploy  #进行部署\n\nInitialized empty Git repository in E:\\codeRepository\\github\\website/.deploy/.git/\n[master (root-commit) bb3079b] First commit\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 placeholder\n[info] Clearing .deploy folder...\n[info] Copying files from public folder...\n[master 6e24e8d] Site updated: 2017-04-08 11:16:23\n 172 files changed, 34969 insertions(+)\n create mode 100644 2017/04/08/Hello-World/index.html\n ...\n create mode 100644 \"tags/\\345\\277\\203\\350\\267\\257\\346\\234\\255\\350\\256\\260/index.html\"\nTo git@github.com/sakitam-fdd/sakitam-fdd.github.io.git\n + 11237d0...6e24e8d master -> master (forced update)\nBranch master set up to track remote branch master from git@github.com/sakitam-fdd/sakitam-fdd.github.io.git\n[info] Deploy done: github\n\n#表示部署成功\n```\n","slug":"blogStart","published":1,"updated":"2022-05-10T05:50:55.136Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl31g417o0001vk6b4us6fzod","content":"<h1 id=\"简介：\"><a href=\"#简介：\" class=\"headerlink\" title=\"简介：\"></a>简介：</h1><p>hexo是一款基于Node.js的静态博客框架，他可以方便的生成静态网页，<br>而且不需要你去关注页面布局这些问题，只需要专注于内容。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"必要环境\"><a href=\"#必要环境\" class=\"headerlink\" title=\"必要环境\"></a>必要环境</h1><ul>\n<li><p>首先要安装 <a href=\"https://nodejs.org/en/download/\">Node.js</a>， Node.js 自带了软件包管理器 npm，hexo 需要 Node.js v0.6 以上支持，建议使用最新版 Node.js。</p>\n</li>\n<li><p>装完node后可以测试一下是否安装成功,命令窗口执行下面命令能正确输出版本号则安装成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure></li>\n<li><p>配置完之后建议将包地址换为国内淘宝镜像源。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br><span class=\"line\">// 配置后可通过下面方式来验证是否成功</span><br><span class=\"line\">npm config get registry</span><br><span class=\"line\">// 或npm info express</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>全局安装hexo脚手架工具和hexo</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -g hexo-cli</span><br><span class=\"line\">npm i -g hexo</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>常用命令</li>\n</ul>\n<blockquote>\n<p>1、 help ： 查看帮助信息<br>  2、 init [文件夹名] ： 创建一个hexo项目，不指定文件夹名，则在当前目录创建<br>  3、 version ： 查看hexo的版本<br>  4、 –config config-path ：指定配置文件，代替默认的_config.yml<br>  5、 –cwd cwd-path ：自定义当前工作目录<br>  5、 –debug ：调试模式，输出所有日志信息<br>  6、 –safe ：安全模式，禁用所有的插件和脚本<br>  7、 –silent ：无日志输出模式<br>  8、 generate ：编译输出静态文件<br>  9、 clean ：清空编译后的缓存和文件<br>  10、server ：开启本地服务器<br>  11、deploy ：部署</p>\n</blockquote>\n<h1 id=\"开始创建\"><a href=\"#开始创建\" class=\"headerlink\" title=\"开始创建\"></a>开始创建</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init myBlog</span><br></pre></td></tr></table></figure>\n\n<p>执行上述命令后会创建一个模板出来，剩下的就需要自己去改了</p>\n<h1 id=\"添加文章\"><a href=\"#添加文章\" class=\"headerlink\" title=\"添加文章\"></a>添加文章</h1><p>文章会自动生成在博客目录下source&#x2F;_posts&#x2F;start.md</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&quot;start&quot;</span>  <span class=\"comment\">#新建博文,其中start是博文题目</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 怎样快速搭建一个博客</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2017-04-08 12:11:50</span><br><span class=\"line\">tags: hexo</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h1><p>Hexo提供了官网的主题, 初始化hexo时也会自动生成一个主题, Hexo还支持个性定制主题, 可以根据自己的喜好对主题进行修改, 更多主题可以在官网中找到<a href=\"https://hexo.io/themes/\">themes</a><br>更改方法如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#在./_config.yml，修改主题为next</span></span><br><span class=\"line\">theme: writing</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看本地效果</span></span><br><span class=\"line\">hexo g       <span class=\"comment\">#hexo generate简写</span></span><br><span class=\"line\">hexo s       <span class=\"comment\">#hexo server简写</span></span><br></pre></td></tr></table></figure>\n<p>更多设置请查看<a href=\"http://theme-next.iissnan.com/\">next主题官网</a></p>\n<h1 id=\"部署到github\"><a href=\"#部署到github\" class=\"headerlink\" title=\"部署到github\"></a>部署到github</h1><p>注意修改配置文件中的deploy配置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">  repository: https://github.com/sakitam-fdd/sakitam-fdd.github.io.git</span><br></pre></td></tr></table></figure>\n\n<p>然后执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy  <span class=\"comment\">#进行部署</span></span><br><span class=\"line\"></span><br><span class=\"line\">Initialized empty Git repository <span class=\"keyword\">in</span> E:\\codeRepository\\github\\website/.deploy/.git/</span><br><span class=\"line\">[master (root-commit) bb3079b] First commit</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 placeholder</span><br><span class=\"line\">[info] Clearing .deploy folder...</span><br><span class=\"line\">[info] Copying files from public folder...</span><br><span class=\"line\">[master 6e24e8d] Site updated: 2017-04-08 11:16:23</span><br><span class=\"line\"> 172 files changed, 34969 insertions(+)</span><br><span class=\"line\"> create mode 100644 2017/04/08/Hello-World/index.html</span><br><span class=\"line\"> ...</span><br><span class=\"line\"> create mode 100644 <span class=\"string\">&quot;tags/\\345\\277\\203\\350\\267\\257\\346\\234\\255\\350\\256\\260/index.html&quot;</span></span><br><span class=\"line\">To git@github.com/sakitam-fdd/sakitam-fdd.github.io.git</span><br><span class=\"line\"> + 11237d0...6e24e8d master -&gt; master (forced update)</span><br><span class=\"line\">Branch master <span class=\"built_in\">set</span> up to track remote branch master from git@github.com/sakitam-fdd/sakitam-fdd.github.io.git</span><br><span class=\"line\">[info] Deploy <span class=\"keyword\">done</span>: github</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#表示部署成功</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"简介：\"><a href=\"#简介：\" class=\"headerlink\" title=\"简介：\"></a>简介：</h1><p>hexo是一款基于Node.js的静态博客框架，他可以方便的生成静态网页，<br>而且不需要你去关注页面布局这些问题，只需要专注于内容。</p>","more":"<h1 id=\"必要环境\"><a href=\"#必要环境\" class=\"headerlink\" title=\"必要环境\"></a>必要环境</h1><ul>\n<li><p>首先要安装 <a href=\"https://nodejs.org/en/download/\">Node.js</a>， Node.js 自带了软件包管理器 npm，hexo 需要 Node.js v0.6 以上支持，建议使用最新版 Node.js。</p>\n</li>\n<li><p>装完node后可以测试一下是否安装成功,命令窗口执行下面命令能正确输出版本号则安装成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure></li>\n<li><p>配置完之后建议将包地址换为国内淘宝镜像源。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br><span class=\"line\">// 配置后可通过下面方式来验证是否成功</span><br><span class=\"line\">npm config get registry</span><br><span class=\"line\">// 或npm info express</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>全局安装hexo脚手架工具和hexo</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -g hexo-cli</span><br><span class=\"line\">npm i -g hexo</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>常用命令</li>\n</ul>\n<blockquote>\n<p>1、 help ： 查看帮助信息<br>  2、 init [文件夹名] ： 创建一个hexo项目，不指定文件夹名，则在当前目录创建<br>  3、 version ： 查看hexo的版本<br>  4、 –config config-path ：指定配置文件，代替默认的_config.yml<br>  5、 –cwd cwd-path ：自定义当前工作目录<br>  5、 –debug ：调试模式，输出所有日志信息<br>  6、 –safe ：安全模式，禁用所有的插件和脚本<br>  7、 –silent ：无日志输出模式<br>  8、 generate ：编译输出静态文件<br>  9、 clean ：清空编译后的缓存和文件<br>  10、server ：开启本地服务器<br>  11、deploy ：部署</p>\n</blockquote>\n<h1 id=\"开始创建\"><a href=\"#开始创建\" class=\"headerlink\" title=\"开始创建\"></a>开始创建</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init myBlog</span><br></pre></td></tr></table></figure>\n\n<p>执行上述命令后会创建一个模板出来，剩下的就需要自己去改了</p>\n<h1 id=\"添加文章\"><a href=\"#添加文章\" class=\"headerlink\" title=\"添加文章\"></a>添加文章</h1><p>文章会自动生成在博客目录下source&#x2F;_posts&#x2F;start.md</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&quot;start&quot;</span>  <span class=\"comment\">#新建博文,其中start是博文题目</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 怎样快速搭建一个博客</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2017-04-08 12:11:50</span><br><span class=\"line\">tags: hexo</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h1><p>Hexo提供了官网的主题, 初始化hexo时也会自动生成一个主题, Hexo还支持个性定制主题, 可以根据自己的喜好对主题进行修改, 更多主题可以在官网中找到<a href=\"https://hexo.io/themes/\">themes</a><br>更改方法如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#在./_config.yml，修改主题为next</span></span><br><span class=\"line\">theme: writing</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看本地效果</span></span><br><span class=\"line\">hexo g       <span class=\"comment\">#hexo generate简写</span></span><br><span class=\"line\">hexo s       <span class=\"comment\">#hexo server简写</span></span><br></pre></td></tr></table></figure>\n<p>更多设置请查看<a href=\"http://theme-next.iissnan.com/\">next主题官网</a></p>\n<h1 id=\"部署到github\"><a href=\"#部署到github\" class=\"headerlink\" title=\"部署到github\"></a>部署到github</h1><p>注意修改配置文件中的deploy配置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">  repository: https://github.com/sakitam-fdd/sakitam-fdd.github.io.git</span><br></pre></td></tr></table></figure>\n\n<p>然后执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy  <span class=\"comment\">#进行部署</span></span><br><span class=\"line\"></span><br><span class=\"line\">Initialized empty Git repository <span class=\"keyword\">in</span> E:\\codeRepository\\github\\website/.deploy/.git/</span><br><span class=\"line\">[master (root-commit) bb3079b] First commit</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 placeholder</span><br><span class=\"line\">[info] Clearing .deploy folder...</span><br><span class=\"line\">[info] Copying files from public folder...</span><br><span class=\"line\">[master 6e24e8d] Site updated: 2017-04-08 11:16:23</span><br><span class=\"line\"> 172 files changed, 34969 insertions(+)</span><br><span class=\"line\"> create mode 100644 2017/04/08/Hello-World/index.html</span><br><span class=\"line\"> ...</span><br><span class=\"line\"> create mode 100644 <span class=\"string\">&quot;tags/\\345\\277\\203\\350\\267\\257\\346\\234\\255\\350\\256\\260/index.html&quot;</span></span><br><span class=\"line\">To git@github.com/sakitam-fdd/sakitam-fdd.github.io.git</span><br><span class=\"line\"> + 11237d0...6e24e8d master -&gt; master (forced update)</span><br><span class=\"line\">Branch master <span class=\"built_in\">set</span> up to track remote branch master from git@github.com/sakitam-fdd/sakitam-fdd.github.io.git</span><br><span class=\"line\">[info] Deploy <span class=\"keyword\">done</span>: github</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#表示部署成功</span></span><br></pre></td></tr></table></figure>"},{"title":"deepin下前端开发环境搭建","date":"2017-12-11T11:11:50.000Z","_content":"\n# 简介：\n\ndeepin下前端相关开发环境搭建，包括nodejs安装，webstorm安装，jdk安装,git安装等。\n\n<!--more-->\n\n# nodejs安装教程\n\n> \n\n* 下载源码：https://nodejs.org/en/download/，优先选择长期支持版，选择Source Code下载\n```bash\nwget https://nodejs.org/dist/v8.9.3/node-v8.9.3.tar.gz\n```\n\n* 解压并安装\n```bash\n// 解压源码压缩包\nsudo tar xvf node-v8.9.3.tar.gz\n\n// 切换到解压后的文件夹内\ncd node-v8.9.3\n\n// 开始安装，编译大概会有20分钟之久\nsudo ./configure \nsudo make \nsudo make install \n\n// 查看当前安装的Node的版本 \nnode -v \nv8.9.3\n\n// 查看NPM版本\nnpm -v\n5.5.1\n```\n\n# git安装教程\n\n```bash\nDebian/Ubuntu\nFor the latest stable version for your release of Debian/Ubuntu\n\n# apt-get install git\nFor Ubuntu, this PPA provides the latest stable upstream Git version\n\n# add-apt-repository ppa:git-core/ppa # apt update; apt install git\nFedora\n# yum install git (up to Fedora 21)\n# dnf install git (Fedora 22 and later)\nGentoo\n# emerge --ask --verbose dev-vcs/git\nArch Linux\n# pacman -S git\nopenSUSE\n# zypper install git\nMageia\n# urpmi git\nNix/NixOS\n# nix-env -i git\nFreeBSD\n# pkg install git\nSolaris 9/10/11 (OpenCSW)\n# pkgutil -i git\nSolaris 11 Express\n# pkg install developer/versioning/git\nOpenBSD\n# pkg_add git\nAlpine\n$ apk add git\n```\n\n# JDK环境配置\n\n```bash\n下载安装Oracle JDK\n下载JDK的tar.gz包\n\n解压压缩包\n进入下载目录\n\ncd ~/Download\n解压tar.gz包\n\ntar -zxvf jdk-8u152-linux-x64.tar.gz\n安装JDK\n\nsudo mv jdk1.8.0_152/  /usr/lib/jvm/jdk1.8.0_152\n\nJDK环境变量配置\n修改配置文件\nsudo vim /etc/profile\n```\n\n在文件的末尾增加内容\n\n```bash\nJAVA_HOME=/usr/lib/jvm/jdk1.8.0_152\nexport PATH=$JAVA_HOME/bin:$PATH \nexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\n```\n\n注意jdk的路径和版本\n\n使配置生效\n\n```bash\nsource /etc/profile\n```\n\n\n配置默认JDK\n创建新的java版本\n在shell用update-alternatives命令创建新的系统命令链接：\n\n```bash\nsudo update-alternatives --install /usr/bin/javac javac  /usr/lib/jvm/jdk1.8.0_152/bin/javac  1171\nsudo update-alternatives --install /usr/bin/java  java  /usr/lib/jvm/jdk1.8.0_152/bin/java  1171\nsudo update-alternatives --install /usr/bin/jar jar /usr/lib/jvm/jdk1.8.0_152/bin/jar 1171   \nsudo update-alternatives --install /usr/bin/javah javah /usr/lib/jvm/jdk1.8.0_152/bin/javah 1171   \nsudo update-alternatives --install /usr/bin/javap javap /usr/lib/jvm/jdk1.8.0_152/bin/javap 1171 \n```\n\nupdate-alternatives是ubuntu系统中专门维护系统命令链接符的工具，后面的1171是用来指定当前链接的优先级，最高的优先级将自动被设置为默认版本。\n\n可以用下面的命令查看JAVA的版本和优先级：\n\n```bash\nupdate-alternatives --display java\n```\n\n选择JAVA的版本\n执行命令\n\n```angular2html\nupdate-alternatives --config java\n```\n\n输出\n\n 有 2 个候选项可用于替换 java (提供 /usr/bin/java)。\n\n  选择       路径                                          优先级  状态\n------------------------------------------------------------\n```bash\n* 0            /usr/lib/jvm/jdk1.8.0_152/bin/java               1171      自动模式\n  1            /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java   1081      手动模式\n  2            /usr/lib/jvm/jdk1.8.0_152/bin/java               1171      手动模式\n```\n\n要维持当前值[*]请按<回车键>，或者键入选择的编号：\n\n上图可以看到刚刚配置的JDK 1.8优先级配置为1171，高于原有的1081，所以被自动设置为默认。\n\n \n\n测试\n查看JAVA版本\n在shell上执行下面命令\n\n```bash\njava -version\n```\n\n如果得到如下输出，证明JDK已经成功安装配置了。\n\n```bash\nPicked up _JAVA_OPTIONS:   -Dawt.useSystemAAFontSettings=gasp\njava version \"1.8.0_152\"\nJava(TM) SE Runtime Environment (build 1.8.0_152-b16)\nJava HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)\n```\n\n# webstorm安装\n\n> 官网：http://www.jetbrains.com/webstorm/\n\n安装过程：\n\n```bash\n解压\n\ntar zxvf WebStorm-2017.3.tar.gz\n移动\n\nsudo mv WebStorm-173.3727.108/ /opt/WebStorm/\n创建链接\n\nsudo ln -s /opt/WebStorm/ /opt/WebStorm\n启动\n\n/opt/WebStorm/bin/webstorm.sh\n添加Dash图标\n```\n\n## 激活\n\n> http://www.imsxm.com/jetbrains-license-server.html\n","source":"_posts/deepin.md","raw":"---\ntitle: deepin下前端开发环境搭建\ndate: 2017-12-11 19:11:50\ncategories:\n- linux\ntags:\n- linux\n- nodejs\n- soft\n- git\n---\n\n# 简介：\n\ndeepin下前端相关开发环境搭建，包括nodejs安装，webstorm安装，jdk安装,git安装等。\n\n<!--more-->\n\n# nodejs安装教程\n\n> \n\n* 下载源码：https://nodejs.org/en/download/，优先选择长期支持版，选择Source Code下载\n```bash\nwget https://nodejs.org/dist/v8.9.3/node-v8.9.3.tar.gz\n```\n\n* 解压并安装\n```bash\n// 解压源码压缩包\nsudo tar xvf node-v8.9.3.tar.gz\n\n// 切换到解压后的文件夹内\ncd node-v8.9.3\n\n// 开始安装，编译大概会有20分钟之久\nsudo ./configure \nsudo make \nsudo make install \n\n// 查看当前安装的Node的版本 \nnode -v \nv8.9.3\n\n// 查看NPM版本\nnpm -v\n5.5.1\n```\n\n# git安装教程\n\n```bash\nDebian/Ubuntu\nFor the latest stable version for your release of Debian/Ubuntu\n\n# apt-get install git\nFor Ubuntu, this PPA provides the latest stable upstream Git version\n\n# add-apt-repository ppa:git-core/ppa # apt update; apt install git\nFedora\n# yum install git (up to Fedora 21)\n# dnf install git (Fedora 22 and later)\nGentoo\n# emerge --ask --verbose dev-vcs/git\nArch Linux\n# pacman -S git\nopenSUSE\n# zypper install git\nMageia\n# urpmi git\nNix/NixOS\n# nix-env -i git\nFreeBSD\n# pkg install git\nSolaris 9/10/11 (OpenCSW)\n# pkgutil -i git\nSolaris 11 Express\n# pkg install developer/versioning/git\nOpenBSD\n# pkg_add git\nAlpine\n$ apk add git\n```\n\n# JDK环境配置\n\n```bash\n下载安装Oracle JDK\n下载JDK的tar.gz包\n\n解压压缩包\n进入下载目录\n\ncd ~/Download\n解压tar.gz包\n\ntar -zxvf jdk-8u152-linux-x64.tar.gz\n安装JDK\n\nsudo mv jdk1.8.0_152/  /usr/lib/jvm/jdk1.8.0_152\n\nJDK环境变量配置\n修改配置文件\nsudo vim /etc/profile\n```\n\n在文件的末尾增加内容\n\n```bash\nJAVA_HOME=/usr/lib/jvm/jdk1.8.0_152\nexport PATH=$JAVA_HOME/bin:$PATH \nexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\n```\n\n注意jdk的路径和版本\n\n使配置生效\n\n```bash\nsource /etc/profile\n```\n\n\n配置默认JDK\n创建新的java版本\n在shell用update-alternatives命令创建新的系统命令链接：\n\n```bash\nsudo update-alternatives --install /usr/bin/javac javac  /usr/lib/jvm/jdk1.8.0_152/bin/javac  1171\nsudo update-alternatives --install /usr/bin/java  java  /usr/lib/jvm/jdk1.8.0_152/bin/java  1171\nsudo update-alternatives --install /usr/bin/jar jar /usr/lib/jvm/jdk1.8.0_152/bin/jar 1171   \nsudo update-alternatives --install /usr/bin/javah javah /usr/lib/jvm/jdk1.8.0_152/bin/javah 1171   \nsudo update-alternatives --install /usr/bin/javap javap /usr/lib/jvm/jdk1.8.0_152/bin/javap 1171 \n```\n\nupdate-alternatives是ubuntu系统中专门维护系统命令链接符的工具，后面的1171是用来指定当前链接的优先级，最高的优先级将自动被设置为默认版本。\n\n可以用下面的命令查看JAVA的版本和优先级：\n\n```bash\nupdate-alternatives --display java\n```\n\n选择JAVA的版本\n执行命令\n\n```angular2html\nupdate-alternatives --config java\n```\n\n输出\n\n 有 2 个候选项可用于替换 java (提供 /usr/bin/java)。\n\n  选择       路径                                          优先级  状态\n------------------------------------------------------------\n```bash\n* 0            /usr/lib/jvm/jdk1.8.0_152/bin/java               1171      自动模式\n  1            /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java   1081      手动模式\n  2            /usr/lib/jvm/jdk1.8.0_152/bin/java               1171      手动模式\n```\n\n要维持当前值[*]请按<回车键>，或者键入选择的编号：\n\n上图可以看到刚刚配置的JDK 1.8优先级配置为1171，高于原有的1081，所以被自动设置为默认。\n\n \n\n测试\n查看JAVA版本\n在shell上执行下面命令\n\n```bash\njava -version\n```\n\n如果得到如下输出，证明JDK已经成功安装配置了。\n\n```bash\nPicked up _JAVA_OPTIONS:   -Dawt.useSystemAAFontSettings=gasp\njava version \"1.8.0_152\"\nJava(TM) SE Runtime Environment (build 1.8.0_152-b16)\nJava HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)\n```\n\n# webstorm安装\n\n> 官网：http://www.jetbrains.com/webstorm/\n\n安装过程：\n\n```bash\n解压\n\ntar zxvf WebStorm-2017.3.tar.gz\n移动\n\nsudo mv WebStorm-173.3727.108/ /opt/WebStorm/\n创建链接\n\nsudo ln -s /opt/WebStorm/ /opt/WebStorm\n启动\n\n/opt/WebStorm/bin/webstorm.sh\n添加Dash图标\n```\n\n## 激活\n\n> http://www.imsxm.com/jetbrains-license-server.html\n","slug":"deepin","published":1,"updated":"2022-05-10T05:50:55.136Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl31g417r0003vk6bc2sia3zt","content":"<h1 id=\"简介：\"><a href=\"#简介：\" class=\"headerlink\" title=\"简介：\"></a>简介：</h1><p>deepin下前端相关开发环境搭建，包括nodejs安装，webstorm安装，jdk安装,git安装等。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"nodejs安装教程\"><a href=\"#nodejs安装教程\" class=\"headerlink\" title=\"nodejs安装教程\"></a>nodejs安装教程</h1><blockquote>\n</blockquote>\n<ul>\n<li><p>下载源码：<a href=\"https://nodejs.org/en/download/%EF%BC%8C%E4%BC%98%E5%85%88%E9%80%89%E6%8B%A9%E9%95%BF%E6%9C%9F%E6%94%AF%E6%8C%81%E7%89%88%EF%BC%8C%E9%80%89%E6%8B%A9Source\">https://nodejs.org/en/download/，优先选择长期支持版，选择Source</a> Code下载</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://nodejs.org/dist/v8.9.3/node-v8.9.3.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解压并安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 解压源码压缩包</span><br><span class=\"line\">sudo tar xvf node-v8.9.3.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">// 切换到解压后的文件夹内</span><br><span class=\"line\"><span class=\"built_in\">cd</span> node-v8.9.3</span><br><span class=\"line\"></span><br><span class=\"line\">// 开始安装，编译大概会有20分钟之久</span><br><span class=\"line\">sudo ./configure </span><br><span class=\"line\">sudo make </span><br><span class=\"line\">sudo make install </span><br><span class=\"line\"></span><br><span class=\"line\">// 查看当前安装的Node的版本 </span><br><span class=\"line\">node -v </span><br><span class=\"line\">v8.9.3</span><br><span class=\"line\"></span><br><span class=\"line\">// 查看NPM版本</span><br><span class=\"line\">npm -v</span><br><span class=\"line\">5.5.1</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"git安装教程\"><a href=\"#git安装教程\" class=\"headerlink\" title=\"git安装教程\"></a>git安装教程</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Debian/Ubuntu</span><br><span class=\"line\">For the latest stable version <span class=\"keyword\">for</span> your release of Debian/Ubuntu</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># apt-get install git</span></span><br><span class=\"line\">For Ubuntu, this PPA provides the latest stable upstream Git version</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># add-apt-repository ppa:git-core/ppa # apt update; apt install git</span></span><br><span class=\"line\">Fedora</span><br><span class=\"line\"><span class=\"comment\"># yum install git (up to Fedora 21)</span></span><br><span class=\"line\"><span class=\"comment\"># dnf install git (Fedora 22 and later)</span></span><br><span class=\"line\">Gentoo</span><br><span class=\"line\"><span class=\"comment\"># emerge --ask --verbose dev-vcs/git</span></span><br><span class=\"line\">Arch Linux</span><br><span class=\"line\"><span class=\"comment\"># pacman -S git</span></span><br><span class=\"line\">openSUSE</span><br><span class=\"line\"><span class=\"comment\"># zypper install git</span></span><br><span class=\"line\">Mageia</span><br><span class=\"line\"><span class=\"comment\"># urpmi git</span></span><br><span class=\"line\">Nix/NixOS</span><br><span class=\"line\"><span class=\"comment\"># nix-env -i git</span></span><br><span class=\"line\">FreeBSD</span><br><span class=\"line\"><span class=\"comment\"># pkg install git</span></span><br><span class=\"line\">Solaris 9/10/11 (OpenCSW)</span><br><span class=\"line\"><span class=\"comment\"># pkgutil -i git</span></span><br><span class=\"line\">Solaris 11 Express</span><br><span class=\"line\"><span class=\"comment\"># pkg install developer/versioning/git</span></span><br><span class=\"line\">OpenBSD</span><br><span class=\"line\"><span class=\"comment\"># pkg_add git</span></span><br><span class=\"line\">Alpine</span><br><span class=\"line\">$ apk add git</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"JDK环境配置\"><a href=\"#JDK环境配置\" class=\"headerlink\" title=\"JDK环境配置\"></a>JDK环境配置</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">下载安装Oracle JDK</span><br><span class=\"line\">下载JDK的tar.gz包</span><br><span class=\"line\"></span><br><span class=\"line\">解压压缩包</span><br><span class=\"line\">进入下载目录</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/Download</span><br><span class=\"line\">解压tar.gz包</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf jdk-8u152-linux-x64.tar.gz</span><br><span class=\"line\">安装JDK</span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">mv</span> jdk1.8.0_152/  /usr/lib/jvm/jdk1.8.0_152</span><br><span class=\"line\"></span><br><span class=\"line\">JDK环境变量配置</span><br><span class=\"line\">修改配置文件</span><br><span class=\"line\">sudo vim /etc/profile</span><br></pre></td></tr></table></figure>\n\n<p>在文件的末尾增加内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JAVA_HOME=/usr/lib/jvm/jdk1.8.0_152</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$JAVA_HOME</span>/bin:<span class=\"variable\">$PATH</span> </span><br><span class=\"line\"><span class=\"built_in\">export</span> CLASSPATH=.:<span class=\"variable\">$JAVA_HOME</span>/lib/dt.jar:<span class=\"variable\">$JAVA_HOME</span>/lib/tools.jar</span><br></pre></td></tr></table></figure>\n\n<p>注意jdk的路径和版本</p>\n<p>使配置生效</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure>\n\n\n<p>配置默认JDK<br>创建新的java版本<br>在shell用update-alternatives命令创建新的系统命令链接：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-alternatives --install /usr/bin/javac javac  /usr/lib/jvm/jdk1.8.0_152/bin/javac  1171</span><br><span class=\"line\">sudo update-alternatives --install /usr/bin/java  java  /usr/lib/jvm/jdk1.8.0_152/bin/java  1171</span><br><span class=\"line\">sudo update-alternatives --install /usr/bin/jar jar /usr/lib/jvm/jdk1.8.0_152/bin/jar 1171   </span><br><span class=\"line\">sudo update-alternatives --install /usr/bin/javah javah /usr/lib/jvm/jdk1.8.0_152/bin/javah 1171   </span><br><span class=\"line\">sudo update-alternatives --install /usr/bin/javap javap /usr/lib/jvm/jdk1.8.0_152/bin/javap 1171 </span><br></pre></td></tr></table></figure>\n\n<p>update-alternatives是ubuntu系统中专门维护系统命令链接符的工具，后面的1171是用来指定当前链接的优先级，最高的优先级将自动被设置为默认版本。</p>\n<p>可以用下面的命令查看JAVA的版本和优先级：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update-alternatives --display java</span><br></pre></td></tr></table></figure>\n\n<p>选择JAVA的版本<br>执行命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update-alternatives --config java</span><br></pre></td></tr></table></figure>\n\n<p>输出</p>\n<p> 有 2 个候选项可用于替换 java (提供 &#x2F;usr&#x2F;bin&#x2F;java)。</p>\n<h2 id=\"选择-路径-优先级-状态\"><a href=\"#选择-路径-优先级-状态\" class=\"headerlink\" title=\"  选择       路径                                          优先级  状态\"></a>  选择       路径                                          优先级  状态</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 0            /usr/lib/jvm/jdk1.8.0_152/bin/java               1171      自动模式</span><br><span class=\"line\">  1            /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java   1081      手动模式</span><br><span class=\"line\">  2            /usr/lib/jvm/jdk1.8.0_152/bin/java               1171      手动模式</span><br></pre></td></tr></table></figure>\n\n<p>要维持当前值[*]请按&lt;回车键&gt;，或者键入选择的编号：</p>\n<p>上图可以看到刚刚配置的JDK 1.8优先级配置为1171，高于原有的1081，所以被自动设置为默认。</p>\n<p>测试<br>查看JAVA版本<br>在shell上执行下面命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n\n<p>如果得到如下输出，证明JDK已经成功安装配置了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Picked up _JAVA_OPTIONS:   -Dawt.useSystemAAFontSettings=gasp</span><br><span class=\"line\">java version <span class=\"string\">&quot;1.8.0_152&quot;</span></span><br><span class=\"line\">Java(TM) SE Runtime Environment (build 1.8.0_152-b16)</span><br><span class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"webstorm安装\"><a href=\"#webstorm安装\" class=\"headerlink\" title=\"webstorm安装\"></a>webstorm安装</h1><blockquote>\n<p>官网：<a href=\"http://www.jetbrains.com/webstorm/\">http://www.jetbrains.com/webstorm/</a></p>\n</blockquote>\n<p>安装过程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解压</span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf WebStorm-2017.3.tar.gz</span><br><span class=\"line\">移动</span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">mv</span> WebStorm-173.3727.108/ /opt/WebStorm/</span><br><span class=\"line\">创建链接</span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">ln</span> -s /opt/WebStorm/ /opt/WebStorm</span><br><span class=\"line\">启动</span><br><span class=\"line\"></span><br><span class=\"line\">/opt/WebStorm/bin/webstorm.sh</span><br><span class=\"line\">添加Dash图标</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"激活\"><a href=\"#激活\" class=\"headerlink\" title=\"激活\"></a>激活</h2><blockquote>\n<p><a href=\"http://www.imsxm.com/jetbrains-license-server.html\">http://www.imsxm.com/jetbrains-license-server.html</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"简介：\"><a href=\"#简介：\" class=\"headerlink\" title=\"简介：\"></a>简介：</h1><p>deepin下前端相关开发环境搭建，包括nodejs安装，webstorm安装，jdk安装,git安装等。</p>","more":"<h1 id=\"nodejs安装教程\"><a href=\"#nodejs安装教程\" class=\"headerlink\" title=\"nodejs安装教程\"></a>nodejs安装教程</h1><blockquote>\n</blockquote>\n<ul>\n<li><p>下载源码：<a href=\"https://nodejs.org/en/download/%EF%BC%8C%E4%BC%98%E5%85%88%E9%80%89%E6%8B%A9%E9%95%BF%E6%9C%9F%E6%94%AF%E6%8C%81%E7%89%88%EF%BC%8C%E9%80%89%E6%8B%A9Source\">https://nodejs.org/en/download/，优先选择长期支持版，选择Source</a> Code下载</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://nodejs.org/dist/v8.9.3/node-v8.9.3.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解压并安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 解压源码压缩包</span><br><span class=\"line\">sudo tar xvf node-v8.9.3.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">// 切换到解压后的文件夹内</span><br><span class=\"line\"><span class=\"built_in\">cd</span> node-v8.9.3</span><br><span class=\"line\"></span><br><span class=\"line\">// 开始安装，编译大概会有20分钟之久</span><br><span class=\"line\">sudo ./configure </span><br><span class=\"line\">sudo make </span><br><span class=\"line\">sudo make install </span><br><span class=\"line\"></span><br><span class=\"line\">// 查看当前安装的Node的版本 </span><br><span class=\"line\">node -v </span><br><span class=\"line\">v8.9.3</span><br><span class=\"line\"></span><br><span class=\"line\">// 查看NPM版本</span><br><span class=\"line\">npm -v</span><br><span class=\"line\">5.5.1</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"git安装教程\"><a href=\"#git安装教程\" class=\"headerlink\" title=\"git安装教程\"></a>git安装教程</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Debian/Ubuntu</span><br><span class=\"line\">For the latest stable version <span class=\"keyword\">for</span> your release of Debian/Ubuntu</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># apt-get install git</span></span><br><span class=\"line\">For Ubuntu, this PPA provides the latest stable upstream Git version</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># add-apt-repository ppa:git-core/ppa # apt update; apt install git</span></span><br><span class=\"line\">Fedora</span><br><span class=\"line\"><span class=\"comment\"># yum install git (up to Fedora 21)</span></span><br><span class=\"line\"><span class=\"comment\"># dnf install git (Fedora 22 and later)</span></span><br><span class=\"line\">Gentoo</span><br><span class=\"line\"><span class=\"comment\"># emerge --ask --verbose dev-vcs/git</span></span><br><span class=\"line\">Arch Linux</span><br><span class=\"line\"><span class=\"comment\"># pacman -S git</span></span><br><span class=\"line\">openSUSE</span><br><span class=\"line\"><span class=\"comment\"># zypper install git</span></span><br><span class=\"line\">Mageia</span><br><span class=\"line\"><span class=\"comment\"># urpmi git</span></span><br><span class=\"line\">Nix/NixOS</span><br><span class=\"line\"><span class=\"comment\"># nix-env -i git</span></span><br><span class=\"line\">FreeBSD</span><br><span class=\"line\"><span class=\"comment\"># pkg install git</span></span><br><span class=\"line\">Solaris 9/10/11 (OpenCSW)</span><br><span class=\"line\"><span class=\"comment\"># pkgutil -i git</span></span><br><span class=\"line\">Solaris 11 Express</span><br><span class=\"line\"><span class=\"comment\"># pkg install developer/versioning/git</span></span><br><span class=\"line\">OpenBSD</span><br><span class=\"line\"><span class=\"comment\"># pkg_add git</span></span><br><span class=\"line\">Alpine</span><br><span class=\"line\">$ apk add git</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"JDK环境配置\"><a href=\"#JDK环境配置\" class=\"headerlink\" title=\"JDK环境配置\"></a>JDK环境配置</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">下载安装Oracle JDK</span><br><span class=\"line\">下载JDK的tar.gz包</span><br><span class=\"line\"></span><br><span class=\"line\">解压压缩包</span><br><span class=\"line\">进入下载目录</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/Download</span><br><span class=\"line\">解压tar.gz包</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf jdk-8u152-linux-x64.tar.gz</span><br><span class=\"line\">安装JDK</span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">mv</span> jdk1.8.0_152/  /usr/lib/jvm/jdk1.8.0_152</span><br><span class=\"line\"></span><br><span class=\"line\">JDK环境变量配置</span><br><span class=\"line\">修改配置文件</span><br><span class=\"line\">sudo vim /etc/profile</span><br></pre></td></tr></table></figure>\n\n<p>在文件的末尾增加内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JAVA_HOME=/usr/lib/jvm/jdk1.8.0_152</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$JAVA_HOME</span>/bin:<span class=\"variable\">$PATH</span> </span><br><span class=\"line\"><span class=\"built_in\">export</span> CLASSPATH=.:<span class=\"variable\">$JAVA_HOME</span>/lib/dt.jar:<span class=\"variable\">$JAVA_HOME</span>/lib/tools.jar</span><br></pre></td></tr></table></figure>\n\n<p>注意jdk的路径和版本</p>\n<p>使配置生效</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure>\n\n\n<p>配置默认JDK<br>创建新的java版本<br>在shell用update-alternatives命令创建新的系统命令链接：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-alternatives --install /usr/bin/javac javac  /usr/lib/jvm/jdk1.8.0_152/bin/javac  1171</span><br><span class=\"line\">sudo update-alternatives --install /usr/bin/java  java  /usr/lib/jvm/jdk1.8.0_152/bin/java  1171</span><br><span class=\"line\">sudo update-alternatives --install /usr/bin/jar jar /usr/lib/jvm/jdk1.8.0_152/bin/jar 1171   </span><br><span class=\"line\">sudo update-alternatives --install /usr/bin/javah javah /usr/lib/jvm/jdk1.8.0_152/bin/javah 1171   </span><br><span class=\"line\">sudo update-alternatives --install /usr/bin/javap javap /usr/lib/jvm/jdk1.8.0_152/bin/javap 1171 </span><br></pre></td></tr></table></figure>\n\n<p>update-alternatives是ubuntu系统中专门维护系统命令链接符的工具，后面的1171是用来指定当前链接的优先级，最高的优先级将自动被设置为默认版本。</p>\n<p>可以用下面的命令查看JAVA的版本和优先级：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update-alternatives --display java</span><br></pre></td></tr></table></figure>\n\n<p>选择JAVA的版本<br>执行命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update-alternatives --config java</span><br></pre></td></tr></table></figure>\n\n<p>输出</p>\n<p> 有 2 个候选项可用于替换 java (提供 &#x2F;usr&#x2F;bin&#x2F;java)。</p>\n<h2 id=\"选择-路径-优先级-状态\"><a href=\"#选择-路径-优先级-状态\" class=\"headerlink\" title=\"  选择       路径                                          优先级  状态\"></a>  选择       路径                                          优先级  状态</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 0            /usr/lib/jvm/jdk1.8.0_152/bin/java               1171      自动模式</span><br><span class=\"line\">  1            /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java   1081      手动模式</span><br><span class=\"line\">  2            /usr/lib/jvm/jdk1.8.0_152/bin/java               1171      手动模式</span><br></pre></td></tr></table></figure>\n\n<p>要维持当前值[*]请按&lt;回车键&gt;，或者键入选择的编号：</p>\n<p>上图可以看到刚刚配置的JDK 1.8优先级配置为1171，高于原有的1081，所以被自动设置为默认。</p>\n<p>测试<br>查看JAVA版本<br>在shell上执行下面命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n\n<p>如果得到如下输出，证明JDK已经成功安装配置了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Picked up _JAVA_OPTIONS:   -Dawt.useSystemAAFontSettings=gasp</span><br><span class=\"line\">java version <span class=\"string\">&quot;1.8.0_152&quot;</span></span><br><span class=\"line\">Java(TM) SE Runtime Environment (build 1.8.0_152-b16)</span><br><span class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"webstorm安装\"><a href=\"#webstorm安装\" class=\"headerlink\" title=\"webstorm安装\"></a>webstorm安装</h1><blockquote>\n<p>官网：<a href=\"http://www.jetbrains.com/webstorm/\">http://www.jetbrains.com/webstorm/</a></p>\n</blockquote>\n<p>安装过程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解压</span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf WebStorm-2017.3.tar.gz</span><br><span class=\"line\">移动</span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">mv</span> WebStorm-173.3727.108/ /opt/WebStorm/</span><br><span class=\"line\">创建链接</span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">ln</span> -s /opt/WebStorm/ /opt/WebStorm</span><br><span class=\"line\">启动</span><br><span class=\"line\"></span><br><span class=\"line\">/opt/WebStorm/bin/webstorm.sh</span><br><span class=\"line\">添加Dash图标</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"激活\"><a href=\"#激活\" class=\"headerlink\" title=\"激活\"></a>激活</h2><blockquote>\n<p><a href=\"http://www.imsxm.com/jetbrains-license-server.html\">http://www.imsxm.com/jetbrains-license-server.html</a></p>\n</blockquote>"},{"title":"动态抓取bing搜索每日一图","date":"2017-04-09T14:00:20.000Z","_content":"\n# 写在前面\n大家都知道微软的Bing搜索引擎首页每天都会提供了一些有趣的图片，而这些图片很多都是有故事含义的，很多网友每天去访问bing首页都是为了这些图片而去的。\n而最近在搭建个人博客时的背景图片非常想使用一些漂亮的图片。当然我们可以使用图床和放置高清大图，但是考虑到不方便，所以想到使用bing的每日一图。\n\n<!--more-->\n\n# 思路\n\n我们打开开发者工具，可以看到有个请求是获取图片地址的：\n```javascript\nvar url = 'http://cn.bing.com/HPImageArchive.aspx?format=js&idx=0&n=1&nc=1491746841662&pid=hp';\n\n// 结果 url即为图片地址\n\nvar res = {\n              \"images\":[\n                  {\n                      \"startdate\":\"20170408\",\n                      \"fullstartdate\":\"201704081600\",\n                      \"enddate\":\"20170409\",\n                      \"url\":\"/az/hprichbg/rb/TulipFestival_ZH-CN8467334837_1920x1080.jpg\",\n                      \"urlbase\":\"/az/hprichbg/rb/TulipFestival_ZH-CN8467334837\",\n                      \"copyright\":\"弗农山上绽放的郁金香，华盛顿 (© Pete Saloutos/plainpicture)\",\n                      \"copyrightlink\":\"/search?q=%e9%83%81%e9%87%91%e9%a6%99&form=hpcapt&mkt=zh-cn\",\n                      \"quiz\":\"/search?q=Bing+homepage+quiz&filters=WQOskey:%22HPQuiz_20170408_TulipFestival%22&FORM=HPQUIZ\",\n                      \"wp\":true,\n                      \"hsh\":\"2587e7cb9ba2b13b50dd321ca94f56b1\",\n                      \"drk\":1,\n                      \"top\":1,\n                      \"bot\":1,\n                      \"hs\":[\n          \n                      ]\n                  }\n              ],\n              \"tooltips\":{\n                  \"loading\":\"Loading...\",\n                  \"previous\":\"Previous image\",\n                  \"next\":\"Next image\",\n                  \"walle\":\"This image is not available to download as wallpaper.\",\n                  \"walls\":\"Download this image. Use of this image is restricted to wallpaper only.\"\n              }\n          }\n```\n\n正常我们请求的话直接请求图片就可以了\n\n```javascript\nvar url = 'http://cn.bing.com/az/hprichbg/rb/TulipFestival_ZH-CN8467334837_1920x1080.jpg'\n```\n\n但是不出所料的出现了跨域问题，所以就考虑到使用代理转发的方式来进行请求。\n\n# 解决方案\n客户端发起请求到nodejs服务器，nodejs收到后请求第三方服务器取得数据，返回给客户端。\n\n```bash\nclient ajax --> nodejs recived --> nodejs send request --> respone to client\n```\n## 范例\n\n### 不使用外部package的代码\n\n```javascript\n/**\n * Created by FDD on 2017/4/9.\n */\nvar http = require('http');\nvar zlib = require('zlib');\n// 创建http服务\nvar app = http.createServer(function (req, res) {\n  // 查询本机ip\n  // var base = '/HPImageArchive.aspx?format=js&idx={idx}&n=1&nc={nc}&pid=hp&video=1';\n  // var idx = parseInt(Math.random() * 10);\n  // var nc = (new Date()).getTime();\n  // var url = base.replace('{idx}', idx.toString()).replace('{nc}', nc.toString());\n  var sreq = http.request({\n    host: 'cn.bing.com', // 目标主机\n    path: req.url, // 目标路径\n    gzip: true,\n    method: req.method // 请求方式\n  }, function (sres) {\n    // console.log(req.url)\n    sres.pipe(res);\n    sres.on('end', function () {\n      console.log('done');\n    });\n  });\n  if (/POST|PUT/i.test(req.method)) {\n    req.pipe(sreq);\n  } else {\n    sreq.end();\n  }\n});\n// 访问127.0.0.1:3001查看效果\napp.listen(3001);\nconsole.log('server started on 127.0.0.1:3001');\n```\n### 使用superAgent的代码\n\n注意这一段代码是为了解决返回乱码和跨域问题\n\n```javascript\nres.writeHead(200, {\n    \"Content-Type\": \"text/html;charset=utf-8\",\n    \"Access-Control-Allow-Origin\": \"*\"\n  });\n```\n\n```javascript\nvar http = require('http');\n// 创建http服务\nvar app = http.createServer(function (req, res) {\n  res.writeHead(200, {\n    \"Content-Type\": \"text/html;charset=utf-8\",\n    \"Access-Control-Allow-Origin\": \"*\"\n  });\n  // 使用了superagent来发起请求\n  var charset = require('superagent-charset');\n  var superagent = require('superagent');\n  charset(superagent);\n  // 查询本机ip，这里需要根据实际情况选择get还是post\n  var base = 'http://cn.bing.com/HPImageArchive.aspx?format=js&idx={idx}&n=1&nc={nc}&pid=hp&video=1';\n  var idx = parseInt(Math.random() * 10);\n  var nc = (new Date()).getTime();\n  var url = base.replace('{idx}', idx.toString()).replace('{nc}', nc.toString());\n  var sreq = superagent.get(url);\n  sreq.charset('utf-8');\n  // JSON.stringify(res);\n  sreq.pipe(res);\n  sreq.on('end', function(){\n    console.log('done');\n  });\n});\n// 访问127.0.0.1:3002查看效果\napp.listen(3002);\nconsole.log('server started on 127.0.0.1:3002');\n```\n### 使用Express + superAgent的代码\n\n```javascript\n/**\n * Created by FDD on 2017/4/9.\n */\nvar express = require('express');\nvar app = express();\napp.get('/', function (req, res) {\n  // 使用了superagent来发起请求\n  var superagent = require('superagent');\n  // 查询本机ip，这里需要根据实际情况选择get还是post\n  var base = 'http://cn.bing.com/HPImageArchive.aspx?format=js&idx={idx}&n=1&nc={nc}&pid=hp&video=1';\n  var idx = parseInt(Math.random() * 10);\n  var nc = (new Date()).getTime();\n  var url = base.replace('{idx}', idx.toString()).replace('{nc}', nc.toString());\n  var sreq = superagent.get(url);\n  sreq.pipe(res);\n  sreq.on('end', function(){\n    console.log('done');\n  });\n});\napp.listen(3001);\nconsole.log('Express started on 127.0.0.1:3001');\n```","source":"_posts/getBingPic.md","raw":"---\ntitle: 动态抓取bing搜索每日一图\ndate: 2017-04-09 22:00:20\ncategories:\n- 前端\n- nodejs\ntags: \n- nodejs\n---\n\n# 写在前面\n大家都知道微软的Bing搜索引擎首页每天都会提供了一些有趣的图片，而这些图片很多都是有故事含义的，很多网友每天去访问bing首页都是为了这些图片而去的。\n而最近在搭建个人博客时的背景图片非常想使用一些漂亮的图片。当然我们可以使用图床和放置高清大图，但是考虑到不方便，所以想到使用bing的每日一图。\n\n<!--more-->\n\n# 思路\n\n我们打开开发者工具，可以看到有个请求是获取图片地址的：\n```javascript\nvar url = 'http://cn.bing.com/HPImageArchive.aspx?format=js&idx=0&n=1&nc=1491746841662&pid=hp';\n\n// 结果 url即为图片地址\n\nvar res = {\n              \"images\":[\n                  {\n                      \"startdate\":\"20170408\",\n                      \"fullstartdate\":\"201704081600\",\n                      \"enddate\":\"20170409\",\n                      \"url\":\"/az/hprichbg/rb/TulipFestival_ZH-CN8467334837_1920x1080.jpg\",\n                      \"urlbase\":\"/az/hprichbg/rb/TulipFestival_ZH-CN8467334837\",\n                      \"copyright\":\"弗农山上绽放的郁金香，华盛顿 (© Pete Saloutos/plainpicture)\",\n                      \"copyrightlink\":\"/search?q=%e9%83%81%e9%87%91%e9%a6%99&form=hpcapt&mkt=zh-cn\",\n                      \"quiz\":\"/search?q=Bing+homepage+quiz&filters=WQOskey:%22HPQuiz_20170408_TulipFestival%22&FORM=HPQUIZ\",\n                      \"wp\":true,\n                      \"hsh\":\"2587e7cb9ba2b13b50dd321ca94f56b1\",\n                      \"drk\":1,\n                      \"top\":1,\n                      \"bot\":1,\n                      \"hs\":[\n          \n                      ]\n                  }\n              ],\n              \"tooltips\":{\n                  \"loading\":\"Loading...\",\n                  \"previous\":\"Previous image\",\n                  \"next\":\"Next image\",\n                  \"walle\":\"This image is not available to download as wallpaper.\",\n                  \"walls\":\"Download this image. Use of this image is restricted to wallpaper only.\"\n              }\n          }\n```\n\n正常我们请求的话直接请求图片就可以了\n\n```javascript\nvar url = 'http://cn.bing.com/az/hprichbg/rb/TulipFestival_ZH-CN8467334837_1920x1080.jpg'\n```\n\n但是不出所料的出现了跨域问题，所以就考虑到使用代理转发的方式来进行请求。\n\n# 解决方案\n客户端发起请求到nodejs服务器，nodejs收到后请求第三方服务器取得数据，返回给客户端。\n\n```bash\nclient ajax --> nodejs recived --> nodejs send request --> respone to client\n```\n## 范例\n\n### 不使用外部package的代码\n\n```javascript\n/**\n * Created by FDD on 2017/4/9.\n */\nvar http = require('http');\nvar zlib = require('zlib');\n// 创建http服务\nvar app = http.createServer(function (req, res) {\n  // 查询本机ip\n  // var base = '/HPImageArchive.aspx?format=js&idx={idx}&n=1&nc={nc}&pid=hp&video=1';\n  // var idx = parseInt(Math.random() * 10);\n  // var nc = (new Date()).getTime();\n  // var url = base.replace('{idx}', idx.toString()).replace('{nc}', nc.toString());\n  var sreq = http.request({\n    host: 'cn.bing.com', // 目标主机\n    path: req.url, // 目标路径\n    gzip: true,\n    method: req.method // 请求方式\n  }, function (sres) {\n    // console.log(req.url)\n    sres.pipe(res);\n    sres.on('end', function () {\n      console.log('done');\n    });\n  });\n  if (/POST|PUT/i.test(req.method)) {\n    req.pipe(sreq);\n  } else {\n    sreq.end();\n  }\n});\n// 访问127.0.0.1:3001查看效果\napp.listen(3001);\nconsole.log('server started on 127.0.0.1:3001');\n```\n### 使用superAgent的代码\n\n注意这一段代码是为了解决返回乱码和跨域问题\n\n```javascript\nres.writeHead(200, {\n    \"Content-Type\": \"text/html;charset=utf-8\",\n    \"Access-Control-Allow-Origin\": \"*\"\n  });\n```\n\n```javascript\nvar http = require('http');\n// 创建http服务\nvar app = http.createServer(function (req, res) {\n  res.writeHead(200, {\n    \"Content-Type\": \"text/html;charset=utf-8\",\n    \"Access-Control-Allow-Origin\": \"*\"\n  });\n  // 使用了superagent来发起请求\n  var charset = require('superagent-charset');\n  var superagent = require('superagent');\n  charset(superagent);\n  // 查询本机ip，这里需要根据实际情况选择get还是post\n  var base = 'http://cn.bing.com/HPImageArchive.aspx?format=js&idx={idx}&n=1&nc={nc}&pid=hp&video=1';\n  var idx = parseInt(Math.random() * 10);\n  var nc = (new Date()).getTime();\n  var url = base.replace('{idx}', idx.toString()).replace('{nc}', nc.toString());\n  var sreq = superagent.get(url);\n  sreq.charset('utf-8');\n  // JSON.stringify(res);\n  sreq.pipe(res);\n  sreq.on('end', function(){\n    console.log('done');\n  });\n});\n// 访问127.0.0.1:3002查看效果\napp.listen(3002);\nconsole.log('server started on 127.0.0.1:3002');\n```\n### 使用Express + superAgent的代码\n\n```javascript\n/**\n * Created by FDD on 2017/4/9.\n */\nvar express = require('express');\nvar app = express();\napp.get('/', function (req, res) {\n  // 使用了superagent来发起请求\n  var superagent = require('superagent');\n  // 查询本机ip，这里需要根据实际情况选择get还是post\n  var base = 'http://cn.bing.com/HPImageArchive.aspx?format=js&idx={idx}&n=1&nc={nc}&pid=hp&video=1';\n  var idx = parseInt(Math.random() * 10);\n  var nc = (new Date()).getTime();\n  var url = base.replace('{idx}', idx.toString()).replace('{nc}', nc.toString());\n  var sreq = superagent.get(url);\n  sreq.pipe(res);\n  sreq.on('end', function(){\n    console.log('done');\n  });\n});\napp.listen(3001);\nconsole.log('Express started on 127.0.0.1:3001');\n```","slug":"getBingPic","published":1,"updated":"2022-05-10T05:50:55.136Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl31g417u0007vk6b3wib04mw","content":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>大家都知道微软的Bing搜索引擎首页每天都会提供了一些有趣的图片，而这些图片很多都是有故事含义的，很多网友每天去访问bing首页都是为了这些图片而去的。<br>而最近在搭建个人博客时的背景图片非常想使用一些漂亮的图片。当然我们可以使用图床和放置高清大图，但是考虑到不方便，所以想到使用bing的每日一图。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>我们打开开发者工具，可以看到有个请求是获取图片地址的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">&#x27;http://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1&amp;nc=1491746841662&amp;pid=hp&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结果 url即为图片地址</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = &#123;</span><br><span class=\"line\">              <span class=\"string\">&quot;images&quot;</span>:[</span><br><span class=\"line\">                  &#123;</span><br><span class=\"line\">                      <span class=\"string\">&quot;startdate&quot;</span>:<span class=\"string\">&quot;20170408&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;fullstartdate&quot;</span>:<span class=\"string\">&quot;201704081600&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;enddate&quot;</span>:<span class=\"string\">&quot;20170409&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;url&quot;</span>:<span class=\"string\">&quot;/az/hprichbg/rb/TulipFestival_ZH-CN8467334837_1920x1080.jpg&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;urlbase&quot;</span>:<span class=\"string\">&quot;/az/hprichbg/rb/TulipFestival_ZH-CN8467334837&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;copyright&quot;</span>:<span class=\"string\">&quot;弗农山上绽放的郁金香，华盛顿 (© Pete Saloutos/plainpicture)&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;copyrightlink&quot;</span>:<span class=\"string\">&quot;/search?q=%e9%83%81%e9%87%91%e9%a6%99&amp;form=hpcapt&amp;mkt=zh-cn&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;quiz&quot;</span>:<span class=\"string\">&quot;/search?q=Bing+homepage+quiz&amp;filters=WQOskey:%22HPQuiz_20170408_TulipFestival%22&amp;FORM=HPQUIZ&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;wp&quot;</span>:<span class=\"literal\">true</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;hsh&quot;</span>:<span class=\"string\">&quot;2587e7cb9ba2b13b50dd321ca94f56b1&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;drk&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;top&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;bot&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;hs&quot;</span>:[</span><br><span class=\"line\">          </span><br><span class=\"line\">                      ]</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">              ],</span><br><span class=\"line\">              <span class=\"string\">&quot;tooltips&quot;</span>:&#123;</span><br><span class=\"line\">                  <span class=\"string\">&quot;loading&quot;</span>:<span class=\"string\">&quot;Loading...&quot;</span>,</span><br><span class=\"line\">                  <span class=\"string\">&quot;previous&quot;</span>:<span class=\"string\">&quot;Previous image&quot;</span>,</span><br><span class=\"line\">                  <span class=\"string\">&quot;next&quot;</span>:<span class=\"string\">&quot;Next image&quot;</span>,</span><br><span class=\"line\">                  <span class=\"string\">&quot;walle&quot;</span>:<span class=\"string\">&quot;This image is not available to download as wallpaper.&quot;</span>,</span><br><span class=\"line\">                  <span class=\"string\">&quot;walls&quot;</span>:<span class=\"string\">&quot;Download this image. Use of this image is restricted to wallpaper only.&quot;</span></span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">          &#125;</span><br></pre></td></tr></table></figure>\n\n<p>正常我们请求的话直接请求图片就可以了</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">&#x27;http://cn.bing.com/az/hprichbg/rb/TulipFestival_ZH-CN8467334837_1920x1080.jpg&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>但是不出所料的出现了跨域问题，所以就考虑到使用代理转发的方式来进行请求。</p>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><p>客户端发起请求到nodejs服务器，nodejs收到后请求第三方服务器取得数据，返回给客户端。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">client ajax --&gt; nodejs recived --&gt; nodejs send request --&gt; respone to client</span><br></pre></td></tr></table></figure>\n<h2 id=\"范例\"><a href=\"#范例\" class=\"headerlink\" title=\"范例\"></a>范例</h2><h3 id=\"不使用外部package的代码\"><a href=\"#不使用外部package的代码\" class=\"headerlink\" title=\"不使用外部package的代码\"></a>不使用外部package的代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by FDD on 2017/4/9.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> zlib = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;zlib&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建http服务</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = http.<span class=\"title function_\">createServer</span>(<span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 查询本机ip</span></span><br><span class=\"line\">  <span class=\"comment\">// var base = &#x27;/HPImageArchive.aspx?format=js&amp;idx=&#123;idx&#125;&amp;n=1&amp;nc=&#123;nc&#125;&amp;pid=hp&amp;video=1&#x27;;</span></span><br><span class=\"line\">  <span class=\"comment\">// var idx = parseInt(Math.random() * 10);</span></span><br><span class=\"line\">  <span class=\"comment\">// var nc = (new Date()).getTime();</span></span><br><span class=\"line\">  <span class=\"comment\">// var url = base.replace(&#x27;&#123;idx&#125;&#x27;, idx.toString()).replace(&#x27;&#123;nc&#125;&#x27;, nc.toString());</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> sreq = http.<span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">host</span>: <span class=\"string\">&#x27;cn.bing.com&#x27;</span>, <span class=\"comment\">// 目标主机</span></span><br><span class=\"line\">    <span class=\"attr\">path</span>: req.<span class=\"property\">url</span>, <span class=\"comment\">// 目标路径</span></span><br><span class=\"line\">    <span class=\"attr\">gzip</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">method</span>: req.<span class=\"property\">method</span> <span class=\"comment\">// 请求方式</span></span><br><span class=\"line\">  &#125;, <span class=\"keyword\">function</span> (<span class=\"params\">sres</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(req.url)</span></span><br><span class=\"line\">    sres.<span class=\"title function_\">pipe</span>(res);</span><br><span class=\"line\">    sres.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;done&#x27;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"regexp\">/POST|PUT/i</span>.<span class=\"title function_\">test</span>(req.<span class=\"property\">method</span>)) &#123;</span><br><span class=\"line\">    req.<span class=\"title function_\">pipe</span>(sreq);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    sreq.<span class=\"title function_\">end</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 访问127.0.0.1:3001查看效果</span></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3001</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;server started on 127.0.0.1:3001&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用superAgent的代码\"><a href=\"#使用superAgent的代码\" class=\"headerlink\" title=\"使用superAgent的代码\"></a>使用superAgent的代码</h3><p>注意这一段代码是为了解决返回乱码和跨域问题</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res.<span class=\"title function_\">writeHead</span>(<span class=\"number\">200</span>, &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;Content-Type&quot;</span>: <span class=\"string\">&quot;text/html;charset=utf-8&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>: <span class=\"string\">&quot;*&quot;</span></span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建http服务</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = http.<span class=\"title function_\">createServer</span>(<span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) &#123;</span><br><span class=\"line\">  res.<span class=\"title function_\">writeHead</span>(<span class=\"number\">200</span>, &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;Content-Type&quot;</span>: <span class=\"string\">&quot;text/html;charset=utf-8&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>: <span class=\"string\">&quot;*&quot;</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"comment\">// 使用了superagent来发起请求</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> charset = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;superagent-charset&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> superagent = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;superagent&#x27;</span>);</span><br><span class=\"line\">  <span class=\"title function_\">charset</span>(superagent);</span><br><span class=\"line\">  <span class=\"comment\">// 查询本机ip，这里需要根据实际情况选择get还是post</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> base = <span class=\"string\">&#x27;http://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=&#123;idx&#125;&amp;n=1&amp;nc=&#123;nc&#125;&amp;pid=hp&amp;video=1&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> idx = <span class=\"built_in\">parseInt</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">10</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> nc = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getTime</span>();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> url = base.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;&#123;idx&#125;&#x27;</span>, idx.<span class=\"title function_\">toString</span>()).<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;&#123;nc&#125;&#x27;</span>, nc.<span class=\"title function_\">toString</span>());</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sreq = superagent.<span class=\"title function_\">get</span>(url);</span><br><span class=\"line\">  sreq.<span class=\"title function_\">charset</span>(<span class=\"string\">&#x27;utf-8&#x27;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// JSON.stringify(res);</span></span><br><span class=\"line\">  sreq.<span class=\"title function_\">pipe</span>(res);</span><br><span class=\"line\">  sreq.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;done&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 访问127.0.0.1:3002查看效果</span></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3002</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;server started on 127.0.0.1:3002&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用Express-superAgent的代码\"><a href=\"#使用Express-superAgent的代码\" class=\"headerlink\" title=\"使用Express + superAgent的代码\"></a>使用Express + superAgent的代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by FDD on 2017/4/9.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"title function_\">express</span>();</span><br><span class=\"line\">app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 使用了superagent来发起请求</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> superagent = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;superagent&#x27;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 查询本机ip，这里需要根据实际情况选择get还是post</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> base = <span class=\"string\">&#x27;http://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=&#123;idx&#125;&amp;n=1&amp;nc=&#123;nc&#125;&amp;pid=hp&amp;video=1&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> idx = <span class=\"built_in\">parseInt</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">10</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> nc = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getTime</span>();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> url = base.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;&#123;idx&#125;&#x27;</span>, idx.<span class=\"title function_\">toString</span>()).<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;&#123;nc&#125;&#x27;</span>, nc.<span class=\"title function_\">toString</span>());</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sreq = superagent.<span class=\"title function_\">get</span>(url);</span><br><span class=\"line\">  sreq.<span class=\"title function_\">pipe</span>(res);</span><br><span class=\"line\">  sreq.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;done&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3001</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Express started on 127.0.0.1:3001&#x27;</span>);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>大家都知道微软的Bing搜索引擎首页每天都会提供了一些有趣的图片，而这些图片很多都是有故事含义的，很多网友每天去访问bing首页都是为了这些图片而去的。<br>而最近在搭建个人博客时的背景图片非常想使用一些漂亮的图片。当然我们可以使用图床和放置高清大图，但是考虑到不方便，所以想到使用bing的每日一图。</p>","more":"<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>我们打开开发者工具，可以看到有个请求是获取图片地址的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">&#x27;http://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1&amp;nc=1491746841662&amp;pid=hp&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结果 url即为图片地址</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = &#123;</span><br><span class=\"line\">              <span class=\"string\">&quot;images&quot;</span>:[</span><br><span class=\"line\">                  &#123;</span><br><span class=\"line\">                      <span class=\"string\">&quot;startdate&quot;</span>:<span class=\"string\">&quot;20170408&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;fullstartdate&quot;</span>:<span class=\"string\">&quot;201704081600&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;enddate&quot;</span>:<span class=\"string\">&quot;20170409&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;url&quot;</span>:<span class=\"string\">&quot;/az/hprichbg/rb/TulipFestival_ZH-CN8467334837_1920x1080.jpg&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;urlbase&quot;</span>:<span class=\"string\">&quot;/az/hprichbg/rb/TulipFestival_ZH-CN8467334837&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;copyright&quot;</span>:<span class=\"string\">&quot;弗农山上绽放的郁金香，华盛顿 (© Pete Saloutos/plainpicture)&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;copyrightlink&quot;</span>:<span class=\"string\">&quot;/search?q=%e9%83%81%e9%87%91%e9%a6%99&amp;form=hpcapt&amp;mkt=zh-cn&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;quiz&quot;</span>:<span class=\"string\">&quot;/search?q=Bing+homepage+quiz&amp;filters=WQOskey:%22HPQuiz_20170408_TulipFestival%22&amp;FORM=HPQUIZ&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;wp&quot;</span>:<span class=\"literal\">true</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;hsh&quot;</span>:<span class=\"string\">&quot;2587e7cb9ba2b13b50dd321ca94f56b1&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;drk&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;top&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;bot&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;hs&quot;</span>:[</span><br><span class=\"line\">          </span><br><span class=\"line\">                      ]</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">              ],</span><br><span class=\"line\">              <span class=\"string\">&quot;tooltips&quot;</span>:&#123;</span><br><span class=\"line\">                  <span class=\"string\">&quot;loading&quot;</span>:<span class=\"string\">&quot;Loading...&quot;</span>,</span><br><span class=\"line\">                  <span class=\"string\">&quot;previous&quot;</span>:<span class=\"string\">&quot;Previous image&quot;</span>,</span><br><span class=\"line\">                  <span class=\"string\">&quot;next&quot;</span>:<span class=\"string\">&quot;Next image&quot;</span>,</span><br><span class=\"line\">                  <span class=\"string\">&quot;walle&quot;</span>:<span class=\"string\">&quot;This image is not available to download as wallpaper.&quot;</span>,</span><br><span class=\"line\">                  <span class=\"string\">&quot;walls&quot;</span>:<span class=\"string\">&quot;Download this image. Use of this image is restricted to wallpaper only.&quot;</span></span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">          &#125;</span><br></pre></td></tr></table></figure>\n\n<p>正常我们请求的话直接请求图片就可以了</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">&#x27;http://cn.bing.com/az/hprichbg/rb/TulipFestival_ZH-CN8467334837_1920x1080.jpg&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>但是不出所料的出现了跨域问题，所以就考虑到使用代理转发的方式来进行请求。</p>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><p>客户端发起请求到nodejs服务器，nodejs收到后请求第三方服务器取得数据，返回给客户端。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">client ajax --&gt; nodejs recived --&gt; nodejs send request --&gt; respone to client</span><br></pre></td></tr></table></figure>\n<h2 id=\"范例\"><a href=\"#范例\" class=\"headerlink\" title=\"范例\"></a>范例</h2><h3 id=\"不使用外部package的代码\"><a href=\"#不使用外部package的代码\" class=\"headerlink\" title=\"不使用外部package的代码\"></a>不使用外部package的代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by FDD on 2017/4/9.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> zlib = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;zlib&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建http服务</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = http.<span class=\"title function_\">createServer</span>(<span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 查询本机ip</span></span><br><span class=\"line\">  <span class=\"comment\">// var base = &#x27;/HPImageArchive.aspx?format=js&amp;idx=&#123;idx&#125;&amp;n=1&amp;nc=&#123;nc&#125;&amp;pid=hp&amp;video=1&#x27;;</span></span><br><span class=\"line\">  <span class=\"comment\">// var idx = parseInt(Math.random() * 10);</span></span><br><span class=\"line\">  <span class=\"comment\">// var nc = (new Date()).getTime();</span></span><br><span class=\"line\">  <span class=\"comment\">// var url = base.replace(&#x27;&#123;idx&#125;&#x27;, idx.toString()).replace(&#x27;&#123;nc&#125;&#x27;, nc.toString());</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> sreq = http.<span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">host</span>: <span class=\"string\">&#x27;cn.bing.com&#x27;</span>, <span class=\"comment\">// 目标主机</span></span><br><span class=\"line\">    <span class=\"attr\">path</span>: req.<span class=\"property\">url</span>, <span class=\"comment\">// 目标路径</span></span><br><span class=\"line\">    <span class=\"attr\">gzip</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">method</span>: req.<span class=\"property\">method</span> <span class=\"comment\">// 请求方式</span></span><br><span class=\"line\">  &#125;, <span class=\"keyword\">function</span> (<span class=\"params\">sres</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(req.url)</span></span><br><span class=\"line\">    sres.<span class=\"title function_\">pipe</span>(res);</span><br><span class=\"line\">    sres.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;done&#x27;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"regexp\">/POST|PUT/i</span>.<span class=\"title function_\">test</span>(req.<span class=\"property\">method</span>)) &#123;</span><br><span class=\"line\">    req.<span class=\"title function_\">pipe</span>(sreq);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    sreq.<span class=\"title function_\">end</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 访问127.0.0.1:3001查看效果</span></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3001</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;server started on 127.0.0.1:3001&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用superAgent的代码\"><a href=\"#使用superAgent的代码\" class=\"headerlink\" title=\"使用superAgent的代码\"></a>使用superAgent的代码</h3><p>注意这一段代码是为了解决返回乱码和跨域问题</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res.<span class=\"title function_\">writeHead</span>(<span class=\"number\">200</span>, &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;Content-Type&quot;</span>: <span class=\"string\">&quot;text/html;charset=utf-8&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>: <span class=\"string\">&quot;*&quot;</span></span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建http服务</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = http.<span class=\"title function_\">createServer</span>(<span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) &#123;</span><br><span class=\"line\">  res.<span class=\"title function_\">writeHead</span>(<span class=\"number\">200</span>, &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;Content-Type&quot;</span>: <span class=\"string\">&quot;text/html;charset=utf-8&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>: <span class=\"string\">&quot;*&quot;</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"comment\">// 使用了superagent来发起请求</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> charset = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;superagent-charset&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> superagent = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;superagent&#x27;</span>);</span><br><span class=\"line\">  <span class=\"title function_\">charset</span>(superagent);</span><br><span class=\"line\">  <span class=\"comment\">// 查询本机ip，这里需要根据实际情况选择get还是post</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> base = <span class=\"string\">&#x27;http://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=&#123;idx&#125;&amp;n=1&amp;nc=&#123;nc&#125;&amp;pid=hp&amp;video=1&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> idx = <span class=\"built_in\">parseInt</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">10</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> nc = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getTime</span>();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> url = base.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;&#123;idx&#125;&#x27;</span>, idx.<span class=\"title function_\">toString</span>()).<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;&#123;nc&#125;&#x27;</span>, nc.<span class=\"title function_\">toString</span>());</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sreq = superagent.<span class=\"title function_\">get</span>(url);</span><br><span class=\"line\">  sreq.<span class=\"title function_\">charset</span>(<span class=\"string\">&#x27;utf-8&#x27;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// JSON.stringify(res);</span></span><br><span class=\"line\">  sreq.<span class=\"title function_\">pipe</span>(res);</span><br><span class=\"line\">  sreq.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;done&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 访问127.0.0.1:3002查看效果</span></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3002</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;server started on 127.0.0.1:3002&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用Express-superAgent的代码\"><a href=\"#使用Express-superAgent的代码\" class=\"headerlink\" title=\"使用Express + superAgent的代码\"></a>使用Express + superAgent的代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by FDD on 2017/4/9.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"title function_\">express</span>();</span><br><span class=\"line\">app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 使用了superagent来发起请求</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> superagent = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;superagent&#x27;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 查询本机ip，这里需要根据实际情况选择get还是post</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> base = <span class=\"string\">&#x27;http://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=&#123;idx&#125;&amp;n=1&amp;nc=&#123;nc&#125;&amp;pid=hp&amp;video=1&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> idx = <span class=\"built_in\">parseInt</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">10</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> nc = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">getTime</span>();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> url = base.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;&#123;idx&#125;&#x27;</span>, idx.<span class=\"title function_\">toString</span>()).<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;&#123;nc&#125;&#x27;</span>, nc.<span class=\"title function_\">toString</span>());</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sreq = superagent.<span class=\"title function_\">get</span>(url);</span><br><span class=\"line\">  sreq.<span class=\"title function_\">pipe</span>(res);</span><br><span class=\"line\">  sreq.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;done&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3001</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Express started on 127.0.0.1:3001&#x27;</span>);</span><br></pre></td></tr></table></figure>"},{"title":"POSTGIS安装使用","date":"2017-05-18T14:00:20.000Z","_content":"\n# 写在前面\n\nPostgreSQL 是一种对象-关系型数据库管理系统（ORDBMS），也是目前功能最强大、特性最丰富和最复杂的自由软件数据库系统。它起源于伯克利（BSD）的数据库目前功能最强大、特性最丰富和最复杂的研究计划，目前是最重要的开源数据库产品开发项目之一， 有着非常广泛的用户。\n\n<!--more-->\n\n# 安装\n","source":"_posts/postgis.md","raw":"---\ntitle: POSTGIS安装使用\ndate: 2017-05-18 22:00:20\ncategories:\n- GIS\n- 数据库\ntags: \n- GIS\n---\n\n# 写在前面\n\nPostgreSQL 是一种对象-关系型数据库管理系统（ORDBMS），也是目前功能最强大、特性最丰富和最复杂的自由软件数据库系统。它起源于伯克利（BSD）的数据库目前功能最强大、特性最丰富和最复杂的研究计划，目前是最重要的开源数据库产品开发项目之一， 有着非常广泛的用户。\n\n<!--more-->\n\n# 安装\n","slug":"postgis","published":1,"updated":"2022-05-10T05:50:55.137Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl31g417v0008vk6b629rbqvy","content":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>PostgreSQL 是一种对象-关系型数据库管理系统（ORDBMS），也是目前功能最强大、特性最丰富和最复杂的自由软件数据库系统。它起源于伯克利（BSD）的数据库目前功能最强大、特性最丰富和最复杂的研究计划，目前是最重要的开源数据库产品开发项目之一， 有着非常广泛的用户。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1>","site":{"data":{}},"excerpt":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>PostgreSQL 是一种对象-关系型数据库管理系统（ORDBMS），也是目前功能最强大、特性最丰富和最复杂的自由软件数据库系统。它起源于伯克利（BSD）的数据库目前功能最强大、特性最丰富和最复杂的研究计划，目前是最重要的开源数据库产品开发项目之一， 有着非常广泛的用户。</p>","more":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1>"},{"title":"使用webpack4手动构建react项目","date":"2018-02-26T06:50:00.000Z","_content":"\n# webpack\n\n  Webpack 是一个前端资源加载/打包工具。它将根据模块的依赖关系进行静态分析，然后将这些模块按照指定的规则生成对应的静态资源。\n自从 ``gulp，Grunt`` 等一些前端工具兴起后，才真正把前端工程化引入，不仅简化了开发流程，更引入了一些前沿思想。\n\n<!--more-->\n\n## webpack 工作方式\n   把你的项目当做一个整体，通过一个给定的主文件（entry）（如：index.js），Webpack将从这个文件开始找到你的项目的所有\n依赖文件，使用loaders处理它们，最后打包为一个（或多个）浏览器可识别的JavaScript文件。\n\n## webpack 4\n\n  实际上在webpack 4之前，webpack有着很多黑点，也催生了后期`rollup`和`parcel`。而`webpack`主要问题存在于：\n  \n* 配置过于复杂。\n* 文档缺失，尤其中文文档。\n* 编译、打包速度过慢。等\n\n原来对于前端来说，打开编辑器就可以撸代码的日子一去不复返，大概配置前端开发环境就需要一天吧 :smile: 。\n对于 `webpack4` 来说，这一个大版本升级做了诸多优化，主要包含如下：\n\n* 环境: 不再支持 `node.js 4`, 源代码已升级到更高的`ecmascript`版本。\n* 用法: \n    - 您现在必须在`production or development`两种模式之间选择（`mode or --mode`)\n    - `production`默认提供所有可能的优化，如代码压缩/作用域提升等\n    - `development`模式下允许注释和 `eval` 下的 `source maps`。\n    - `production`模式下不支持 `watch`，`development`模式下针对代码变化后的重新打包进行了优化。\n    - `production`模式下默认提供模块合并（作用域提升）。\n    - 你可以配置 `optimization` 自定义模式。\n    - `process.env.NODE_ENV` 的值不需要再定义，默认对应当前模式。\n    - 并且可以设置 `none` 模式可以禁用所有的功能。\n* 语法\n    - 在 webpack 4 中，import() 会返回一个带命名空间(namespace)的对象，这对 ES Module 不会有影响，但对于遵循 commonjs 规范的模块则会加一层包裹。\n    - 在`webpack 4` 中如果你使用 `import（）` 导入 `CommonJs` 模块可能会破坏你的代码。\n* 配置\n> 删除了一些常用内置插件：\n\n    - NoEmitOnErrorsPlugin -> optimization.noEmitOnErrors (生产模式默认)\n    - ModuleConcatenationPlugin -> optimization.concatenateModules （生产模式默认）\n    - NamedModulesPlugin -> optimization.namedModules （开发模式默认）。\n    - 删除了 CommonsChunkPlugin，取而代之的是 optimization.splitChunks 和 optimization.runtimeChunk，这提供了细粒度的缓存策略控制\n\n* JSON处理\n\n    - webpack现在默认处理JSON。\n        \n        * 将JSON通过加载器转换为JS时，可能需要添加类型：`javascript / auto`.\n        * 还支持对 JSON 的 Tree Shaking。当使用 ESM 语法 import json 时，webpack 会处理掉JSON Module 中未使用的导出。\n* 优化\n\n    - uglifyjs-webpack-plugin 发布 v1，支持 ES2015\n    - 使用 JSONP 数组来代替 JSONP 函数 –> 异步支持   \n\n* 重大功能性更新\n\n  1. Modules(模块)： \n    - webpack 现在支持以下文件类型：\n        * javascript/auto: (webpack 3中的默认类型)支持所有的JS模块系统：CommonJS、AMD、ESM\n        * javascript/esm: EcmaScript 模块，在其他的模块系统中不可用。\n        * javascript/dynamic: 仅支持 CommonJS & AMD，ES moudle 不可用。\n        * json: 可通过 require 和 import 导入的 JSON 格式的数据(默认为 .json 的文件)\n        * webassembly/experimental: WebAssembly 模块(试验阶段，默认为 .wasm 的文件)。\n    - 与`javascript/auto`相比，`javascript/esm`更严格地处理`ESM`文档\n        * 导入的名称需要在导入的模块上存在。\n        * 动态模块（非esm，即CommonJs）只能通过`default`导入，其他方式（包括命名空间导入）都会发出错误。\n    - 以后缀名为`.mjs`的模块默认为 `javascript/esm`。\n    - WebAssembly模块\n        * 可以导入其他模块（JS和WASM）。\n        * 从`WebAssembly`模块导出的模块将通过ESM导入进行验证。\n        * 只能用于异步模块。\n        * WebAssembly为实验性功能。\n        \n  2. Optimization(优化):\n    - sideEffects: `package.json`现在支持配置`false`。\n        * `package.json`中的`sideEffects`还支持`glob`表达式和`glob`表达式的数组。\n    - 使用 `JSONP` 数组替代 `JSONP` 函数，异步脚本支持，不再依赖于加载顺序。\n    - 引入了新的`optimization.splitChunks`选项 [detail](https://gist.github.com/sokra/1522d586b8e5c0f5072d7565c2bee693)。\n    - 无用代码现在由`webpack`自动处理。\n        * Before: 在 `Uglify` 中处理无用代码。\n        * 现在： `webpack` 默认处理。\n        * 这可以防止无用代码中存在`import()`时出现错误。\n        \n  3. Syntax(语法):\n    - 通过`import()`可以支持`webpackInclude`和`webpackExclude`。它们允许在使用动态表达式过滤文件。\n    - 减少使用`System.import()`现在` 使用`System.import()`会发出警告。\n        * 你可以配置 `Rule.parser.system: true` 禁用警告。\n        * 配置 `Rule.parser.system: false`可以禁用 `System.import`。\n  4. Configuration(配置)：\n    - 现在可以使用`module.rules[].resolve`来配置解析。它将合并到全局配置中。\n    - 在`production` 模式，`optimization.minimize` 默认打开； `development` 模式默认关闭。\n  5. Usage(用法)：\n    - 部分插件配置现在将被验证。\n    - `CLI`已转移到`webpack-cli`，您需要安装`webpack-cli`才能使用`CLI`。\n    - []\n  6. Performance(性能提升)：\n    - `UglifyJs` 现在默认进行缓存。\n    - 多重性能改进，特别是对于频繁修改的文件的重新编译。\n    - 对于`RemoveParentModulesPlugin`的性能改进。\n  7. Stats(统计)：\n    - 统计信息可以显示嵌套中的模块。\n\n其他更多信息可以查看 [releases](https://github.com/webpack/webpack/releases)。\n\n# 从 angular1.x 到 vue 再到 react 的心路历程\n\n  网上有太多的文章去讨论目前前端三大框架的优缺点，其实有些时候可以说适合你的才是\n最好的，没必要过多的纠结好或不好的问题。从开始的 ``jquery`` 的原生态开发到 ``angularjs``\n的双向绑定再到部门技术选型从而切到 ``vuejs`` （从1到2）再到现在对 ``react``的尝试，\n可谓是三大框架走了个遍。有些时候不得不感叹 `我圈真乱 斜眼笑`。\n\n# 准备工作\n\n  因为目前项目使用的 `vue` 框架，并且对 `vue` 相关项目配置有所了解，所以项目架构直接采用\n`webpack + es2015 + react` 构建，并且采用手撸 `webpack` 配置加深印象。\n\n## 创建项目\n\n* ``mkdir react-map`` // 创建 react-map 文件夹\n* ``cd react-map`` // 进入文件夹\n* 使用 ``npm init`` 初始化项目，按需要进行配置。\n\n## 安装依赖\n\n* ``npm install webpack-cli webpack webpack-bundle-analyzer webpack-dev-server webpack-merge uglifyjs-webpack-plugin html-webpack-plugin extract-text-webpack-plugin optimize-css-assets-webpack-plugin friendly-errors-webpack-plugin --save-dev`` // 安装 webpack （目前已升级到 4）\n* ``npm install react react-dom --save`` // 参考：https://facebook.github.io/react/docs/installation.html\n\n| 包名 | 简介 | 作用 | 版本 |\n| --- | --- | --- | --- |\n| `webpack` | 模块打包器 | 对 `react` 项目的打包，`ES2015+` 的代码转换，静态资源处理等 | `^4.0.1` |\n| `react` | js 框架 | `react` 基础框架 | `^16.2.0` |\n| `react-dom` | 操作 DOM | 搭配 `react` 用了操作dom的 | `^16.2.0` |\n\n因为需要采用 `es2015` 语法 所以还应当安装babel-loader以及其他相关依赖, 具体也可以参考 vue 项目配置。\n\n* ``npm install babel-loader babel-core babel-preset-es2015 babel-preset-react babel-eslint --save-dev``\n\n样式预处理器保持和现有项目保持一致，任然采用 ``scss``, 但是任然需要处理内联样式和 css 文件。\n\n* ``npm install css-loader style-loader node-sass sass-loader --save-dev``\n\n安装 ``eslint`` 相关\n\n* ``npm install eslint eslint-config-airbnb eslint-plugin-babel eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react eslint-friendly-formatter --save-dev``\n\n安装静态文件 loader 相关\n\n* ``npm install url-loader file-loader portfinder --save-dev``\n* ``npm install postcss-url postcss-loader postcss-import autoprefixer --save-dev``\n\n## webpack 配置\n\n> 编写对应的webpack 配置","source":"_posts/startReact.md","raw":"---\ntitle: 使用webpack4手动构建react项目\ndate: 2018-02-26 14:50:00\ncategories: [front-end]\ntags: [react, webpack]\n---\n\n# webpack\n\n  Webpack 是一个前端资源加载/打包工具。它将根据模块的依赖关系进行静态分析，然后将这些模块按照指定的规则生成对应的静态资源。\n自从 ``gulp，Grunt`` 等一些前端工具兴起后，才真正把前端工程化引入，不仅简化了开发流程，更引入了一些前沿思想。\n\n<!--more-->\n\n## webpack 工作方式\n   把你的项目当做一个整体，通过一个给定的主文件（entry）（如：index.js），Webpack将从这个文件开始找到你的项目的所有\n依赖文件，使用loaders处理它们，最后打包为一个（或多个）浏览器可识别的JavaScript文件。\n\n## webpack 4\n\n  实际上在webpack 4之前，webpack有着很多黑点，也催生了后期`rollup`和`parcel`。而`webpack`主要问题存在于：\n  \n* 配置过于复杂。\n* 文档缺失，尤其中文文档。\n* 编译、打包速度过慢。等\n\n原来对于前端来说，打开编辑器就可以撸代码的日子一去不复返，大概配置前端开发环境就需要一天吧 :smile: 。\n对于 `webpack4` 来说，这一个大版本升级做了诸多优化，主要包含如下：\n\n* 环境: 不再支持 `node.js 4`, 源代码已升级到更高的`ecmascript`版本。\n* 用法: \n    - 您现在必须在`production or development`两种模式之间选择（`mode or --mode`)\n    - `production`默认提供所有可能的优化，如代码压缩/作用域提升等\n    - `development`模式下允许注释和 `eval` 下的 `source maps`。\n    - `production`模式下不支持 `watch`，`development`模式下针对代码变化后的重新打包进行了优化。\n    - `production`模式下默认提供模块合并（作用域提升）。\n    - 你可以配置 `optimization` 自定义模式。\n    - `process.env.NODE_ENV` 的值不需要再定义，默认对应当前模式。\n    - 并且可以设置 `none` 模式可以禁用所有的功能。\n* 语法\n    - 在 webpack 4 中，import() 会返回一个带命名空间(namespace)的对象，这对 ES Module 不会有影响，但对于遵循 commonjs 规范的模块则会加一层包裹。\n    - 在`webpack 4` 中如果你使用 `import（）` 导入 `CommonJs` 模块可能会破坏你的代码。\n* 配置\n> 删除了一些常用内置插件：\n\n    - NoEmitOnErrorsPlugin -> optimization.noEmitOnErrors (生产模式默认)\n    - ModuleConcatenationPlugin -> optimization.concatenateModules （生产模式默认）\n    - NamedModulesPlugin -> optimization.namedModules （开发模式默认）。\n    - 删除了 CommonsChunkPlugin，取而代之的是 optimization.splitChunks 和 optimization.runtimeChunk，这提供了细粒度的缓存策略控制\n\n* JSON处理\n\n    - webpack现在默认处理JSON。\n        \n        * 将JSON通过加载器转换为JS时，可能需要添加类型：`javascript / auto`.\n        * 还支持对 JSON 的 Tree Shaking。当使用 ESM 语法 import json 时，webpack 会处理掉JSON Module 中未使用的导出。\n* 优化\n\n    - uglifyjs-webpack-plugin 发布 v1，支持 ES2015\n    - 使用 JSONP 数组来代替 JSONP 函数 –> 异步支持   \n\n* 重大功能性更新\n\n  1. Modules(模块)： \n    - webpack 现在支持以下文件类型：\n        * javascript/auto: (webpack 3中的默认类型)支持所有的JS模块系统：CommonJS、AMD、ESM\n        * javascript/esm: EcmaScript 模块，在其他的模块系统中不可用。\n        * javascript/dynamic: 仅支持 CommonJS & AMD，ES moudle 不可用。\n        * json: 可通过 require 和 import 导入的 JSON 格式的数据(默认为 .json 的文件)\n        * webassembly/experimental: WebAssembly 模块(试验阶段，默认为 .wasm 的文件)。\n    - 与`javascript/auto`相比，`javascript/esm`更严格地处理`ESM`文档\n        * 导入的名称需要在导入的模块上存在。\n        * 动态模块（非esm，即CommonJs）只能通过`default`导入，其他方式（包括命名空间导入）都会发出错误。\n    - 以后缀名为`.mjs`的模块默认为 `javascript/esm`。\n    - WebAssembly模块\n        * 可以导入其他模块（JS和WASM）。\n        * 从`WebAssembly`模块导出的模块将通过ESM导入进行验证。\n        * 只能用于异步模块。\n        * WebAssembly为实验性功能。\n        \n  2. Optimization(优化):\n    - sideEffects: `package.json`现在支持配置`false`。\n        * `package.json`中的`sideEffects`还支持`glob`表达式和`glob`表达式的数组。\n    - 使用 `JSONP` 数组替代 `JSONP` 函数，异步脚本支持，不再依赖于加载顺序。\n    - 引入了新的`optimization.splitChunks`选项 [detail](https://gist.github.com/sokra/1522d586b8e5c0f5072d7565c2bee693)。\n    - 无用代码现在由`webpack`自动处理。\n        * Before: 在 `Uglify` 中处理无用代码。\n        * 现在： `webpack` 默认处理。\n        * 这可以防止无用代码中存在`import()`时出现错误。\n        \n  3. Syntax(语法):\n    - 通过`import()`可以支持`webpackInclude`和`webpackExclude`。它们允许在使用动态表达式过滤文件。\n    - 减少使用`System.import()`现在` 使用`System.import()`会发出警告。\n        * 你可以配置 `Rule.parser.system: true` 禁用警告。\n        * 配置 `Rule.parser.system: false`可以禁用 `System.import`。\n  4. Configuration(配置)：\n    - 现在可以使用`module.rules[].resolve`来配置解析。它将合并到全局配置中。\n    - 在`production` 模式，`optimization.minimize` 默认打开； `development` 模式默认关闭。\n  5. Usage(用法)：\n    - 部分插件配置现在将被验证。\n    - `CLI`已转移到`webpack-cli`，您需要安装`webpack-cli`才能使用`CLI`。\n    - []\n  6. Performance(性能提升)：\n    - `UglifyJs` 现在默认进行缓存。\n    - 多重性能改进，特别是对于频繁修改的文件的重新编译。\n    - 对于`RemoveParentModulesPlugin`的性能改进。\n  7. Stats(统计)：\n    - 统计信息可以显示嵌套中的模块。\n\n其他更多信息可以查看 [releases](https://github.com/webpack/webpack/releases)。\n\n# 从 angular1.x 到 vue 再到 react 的心路历程\n\n  网上有太多的文章去讨论目前前端三大框架的优缺点，其实有些时候可以说适合你的才是\n最好的，没必要过多的纠结好或不好的问题。从开始的 ``jquery`` 的原生态开发到 ``angularjs``\n的双向绑定再到部门技术选型从而切到 ``vuejs`` （从1到2）再到现在对 ``react``的尝试，\n可谓是三大框架走了个遍。有些时候不得不感叹 `我圈真乱 斜眼笑`。\n\n# 准备工作\n\n  因为目前项目使用的 `vue` 框架，并且对 `vue` 相关项目配置有所了解，所以项目架构直接采用\n`webpack + es2015 + react` 构建，并且采用手撸 `webpack` 配置加深印象。\n\n## 创建项目\n\n* ``mkdir react-map`` // 创建 react-map 文件夹\n* ``cd react-map`` // 进入文件夹\n* 使用 ``npm init`` 初始化项目，按需要进行配置。\n\n## 安装依赖\n\n* ``npm install webpack-cli webpack webpack-bundle-analyzer webpack-dev-server webpack-merge uglifyjs-webpack-plugin html-webpack-plugin extract-text-webpack-plugin optimize-css-assets-webpack-plugin friendly-errors-webpack-plugin --save-dev`` // 安装 webpack （目前已升级到 4）\n* ``npm install react react-dom --save`` // 参考：https://facebook.github.io/react/docs/installation.html\n\n| 包名 | 简介 | 作用 | 版本 |\n| --- | --- | --- | --- |\n| `webpack` | 模块打包器 | 对 `react` 项目的打包，`ES2015+` 的代码转换，静态资源处理等 | `^4.0.1` |\n| `react` | js 框架 | `react` 基础框架 | `^16.2.0` |\n| `react-dom` | 操作 DOM | 搭配 `react` 用了操作dom的 | `^16.2.0` |\n\n因为需要采用 `es2015` 语法 所以还应当安装babel-loader以及其他相关依赖, 具体也可以参考 vue 项目配置。\n\n* ``npm install babel-loader babel-core babel-preset-es2015 babel-preset-react babel-eslint --save-dev``\n\n样式预处理器保持和现有项目保持一致，任然采用 ``scss``, 但是任然需要处理内联样式和 css 文件。\n\n* ``npm install css-loader style-loader node-sass sass-loader --save-dev``\n\n安装 ``eslint`` 相关\n\n* ``npm install eslint eslint-config-airbnb eslint-plugin-babel eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react eslint-friendly-formatter --save-dev``\n\n安装静态文件 loader 相关\n\n* ``npm install url-loader file-loader portfinder --save-dev``\n* ``npm install postcss-url postcss-loader postcss-import autoprefixer --save-dev``\n\n## webpack 配置\n\n> 编写对应的webpack 配置","slug":"startReact","published":1,"updated":"2022-05-10T05:50:55.137Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl31g417w0009vk6bffosavke","content":"<h1 id=\"webpack\"><a href=\"#webpack\" class=\"headerlink\" title=\"webpack\"></a>webpack</h1><p>  Webpack 是一个前端资源加载&#x2F;打包工具。它将根据模块的依赖关系进行静态分析，然后将这些模块按照指定的规则生成对应的静态资源。<br>自从 <code>gulp，Grunt</code> 等一些前端工具兴起后，才真正把前端工程化引入，不仅简化了开发流程，更引入了一些前沿思想。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"webpack-工作方式\"><a href=\"#webpack-工作方式\" class=\"headerlink\" title=\"webpack 工作方式\"></a>webpack 工作方式</h2><p>   把你的项目当做一个整体，通过一个给定的主文件（entry）（如：index.js），Webpack将从这个文件开始找到你的项目的所有<br>依赖文件，使用loaders处理它们，最后打包为一个（或多个）浏览器可识别的JavaScript文件。</p>\n<h2 id=\"webpack-4\"><a href=\"#webpack-4\" class=\"headerlink\" title=\"webpack 4\"></a>webpack 4</h2><p>  实际上在webpack 4之前，webpack有着很多黑点，也催生了后期<code>rollup</code>和<code>parcel</code>。而<code>webpack</code>主要问题存在于：</p>\n<ul>\n<li>配置过于复杂。</li>\n<li>文档缺失，尤其中文文档。</li>\n<li>编译、打包速度过慢。等</li>\n</ul>\n<p>原来对于前端来说，打开编辑器就可以撸代码的日子一去不复返，大概配置前端开发环境就需要一天吧 :smile: 。<br>对于 <code>webpack4</code> 来说，这一个大版本升级做了诸多优化，主要包含如下：</p>\n<ul>\n<li><p>环境: 不再支持 <code>node.js 4</code>, 源代码已升级到更高的<code>ecmascript</code>版本。</p>\n</li>\n<li><p>用法: </p>\n<ul>\n<li>您现在必须在<code>production or development</code>两种模式之间选择（<code>mode or --mode</code>)</li>\n<li><code>production</code>默认提供所有可能的优化，如代码压缩&#x2F;作用域提升等</li>\n<li><code>development</code>模式下允许注释和 <code>eval</code> 下的 <code>source maps</code>。</li>\n<li><code>production</code>模式下不支持 <code>watch</code>，<code>development</code>模式下针对代码变化后的重新打包进行了优化。</li>\n<li><code>production</code>模式下默认提供模块合并（作用域提升）。</li>\n<li>你可以配置 <code>optimization</code> 自定义模式。</li>\n<li><code>process.env.NODE_ENV</code> 的值不需要再定义，默认对应当前模式。</li>\n<li>并且可以设置 <code>none</code> 模式可以禁用所有的功能。</li>\n</ul>\n</li>\n<li><p>语法</p>\n<ul>\n<li>在 webpack 4 中，import() 会返回一个带命名空间(namespace)的对象，这对 ES Module 不会有影响，但对于遵循 commonjs 规范的模块则会加一层包裹。</li>\n<li>在<code>webpack 4</code> 中如果你使用 <code>import（）</code> 导入 <code>CommonJs</code> 模块可能会破坏你的代码。</li>\n</ul>\n</li>\n<li><p>配置</p>\n<blockquote>\n<p>删除了一些常用内置插件：</p>\n</blockquote>\n<ul>\n<li>NoEmitOnErrorsPlugin -&gt; optimization.noEmitOnErrors (生产模式默认)</li>\n<li>ModuleConcatenationPlugin -&gt; optimization.concatenateModules （生产模式默认）</li>\n<li>NamedModulesPlugin -&gt; optimization.namedModules （开发模式默认）。</li>\n<li>删除了 CommonsChunkPlugin，取而代之的是 optimization.splitChunks 和 optimization.runtimeChunk，这提供了细粒度的缓存策略控制</li>\n</ul>\n</li>\n<li><p>JSON处理</p>\n<ul>\n<li><p>webpack现在默认处理JSON。</p>\n<ul>\n<li>将JSON通过加载器转换为JS时，可能需要添加类型：<code>javascript / auto</code>.</li>\n<li>还支持对 JSON 的 Tree Shaking。当使用 ESM 语法 import json 时，webpack 会处理掉JSON Module 中未使用的导出。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>优化</p>\n<ul>\n<li>uglifyjs-webpack-plugin 发布 v1，支持 ES2015</li>\n<li>使用 JSONP 数组来代替 JSONP 函数 –&gt; 异步支持</li>\n</ul>\n</li>\n<li><p>重大功能性更新</p>\n<ol>\n<li>Modules(模块)：</li>\n</ol>\n<ul>\n<li>webpack 现在支持以下文件类型：<ul>\n<li>javascript&#x2F;auto: (webpack 3中的默认类型)支持所有的JS模块系统：CommonJS、AMD、ESM</li>\n<li>javascript&#x2F;esm: EcmaScript 模块，在其他的模块系统中不可用。</li>\n<li>javascript&#x2F;dynamic: 仅支持 CommonJS &amp; AMD，ES moudle 不可用。</li>\n<li>json: 可通过 require 和 import 导入的 JSON 格式的数据(默认为 .json 的文件)</li>\n<li>webassembly&#x2F;experimental: WebAssembly 模块(试验阶段，默认为 .wasm 的文件)。</li>\n</ul>\n</li>\n<li>与<code>javascript/auto</code>相比，<code>javascript/esm</code>更严格地处理<code>ESM</code>文档<ul>\n<li>导入的名称需要在导入的模块上存在。</li>\n<li>动态模块（非esm，即CommonJs）只能通过<code>default</code>导入，其他方式（包括命名空间导入）都会发出错误。</li>\n</ul>\n</li>\n<li>以后缀名为<code>.mjs</code>的模块默认为 <code>javascript/esm</code>。</li>\n<li>WebAssembly模块<ul>\n<li>可以导入其他模块（JS和WASM）。</li>\n<li>从<code>WebAssembly</code>模块导出的模块将通过ESM导入进行验证。</li>\n<li>只能用于异步模块。</li>\n<li>WebAssembly为实验性功能。</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>Optimization(优化):</li>\n</ol>\n<ul>\n<li>sideEffects: <code>package.json</code>现在支持配置<code>false</code>。<ul>\n<li><code>package.json</code>中的<code>sideEffects</code>还支持<code>glob</code>表达式和<code>glob</code>表达式的数组。</li>\n</ul>\n</li>\n<li>使用 <code>JSONP</code> 数组替代 <code>JSONP</code> 函数，异步脚本支持，不再依赖于加载顺序。</li>\n<li>引入了新的<code>optimization.splitChunks</code>选项 <a href=\"https://gist.github.com/sokra/1522d586b8e5c0f5072d7565c2bee693\">detail</a>。</li>\n<li>无用代码现在由<code>webpack</code>自动处理。<ul>\n<li>Before: 在 <code>Uglify</code> 中处理无用代码。</li>\n<li>现在： <code>webpack</code> 默认处理。</li>\n<li>这可以防止无用代码中存在<code>import()</code>时出现错误。</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>Syntax(语法):</li>\n</ol>\n<ul>\n<li>通过<code>import()</code>可以支持<code>webpackInclude</code>和<code>webpackExclude</code>。它们允许在使用动态表达式过滤文件。</li>\n<li>减少使用<code>System.import()</code>现在<code> 使用</code>System.import()&#96;会发出警告。<ul>\n<li>你可以配置 <code>Rule.parser.system: true</code> 禁用警告。</li>\n<li>配置 <code>Rule.parser.system: false</code>可以禁用 <code>System.import</code>。</li>\n</ul>\n</li>\n</ul>\n<ol start=\"4\">\n<li>Configuration(配置)：</li>\n</ol>\n<ul>\n<li>现在可以使用<code>module.rules[].resolve</code>来配置解析。它将合并到全局配置中。</li>\n<li>在<code>production</code> 模式，<code>optimization.minimize</code> 默认打开； <code>development</code> 模式默认关闭。</li>\n</ul>\n<ol start=\"5\">\n<li>Usage(用法)：</li>\n</ol>\n<ul>\n<li>部分插件配置现在将被验证。</li>\n<li><code>CLI</code>已转移到<code>webpack-cli</code>，您需要安装<code>webpack-cli</code>才能使用<code>CLI</code>。</li>\n<li>[]</li>\n</ul>\n<ol start=\"6\">\n<li>Performance(性能提升)：</li>\n</ol>\n<ul>\n<li><code>UglifyJs</code> 现在默认进行缓存。</li>\n<li>多重性能改进，特别是对于频繁修改的文件的重新编译。</li>\n<li>对于<code>RemoveParentModulesPlugin</code>的性能改进。</li>\n</ul>\n<ol start=\"7\">\n<li>Stats(统计)：</li>\n</ol>\n<ul>\n<li>统计信息可以显示嵌套中的模块。</li>\n</ul>\n</li>\n</ul>\n<p>其他更多信息可以查看 <a href=\"https://github.com/webpack/webpack/releases\">releases</a>。</p>\n<h1 id=\"从-angular1-x-到-vue-再到-react-的心路历程\"><a href=\"#从-angular1-x-到-vue-再到-react-的心路历程\" class=\"headerlink\" title=\"从 angular1.x 到 vue 再到 react 的心路历程\"></a>从 angular1.x 到 vue 再到 react 的心路历程</h1><p>  网上有太多的文章去讨论目前前端三大框架的优缺点，其实有些时候可以说适合你的才是<br>最好的，没必要过多的纠结好或不好的问题。从开始的 <code>jquery</code> 的原生态开发到 <code>angularjs</code><br>的双向绑定再到部门技术选型从而切到 <code>vuejs</code> （从1到2）再到现在对 <code>react</code>的尝试，<br>可谓是三大框架走了个遍。有些时候不得不感叹 <code>我圈真乱 斜眼笑</code>。</p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><p>  因为目前项目使用的 <code>vue</code> 框架，并且对 <code>vue</code> 相关项目配置有所了解，所以项目架构直接采用<br><code>webpack + es2015 + react</code> 构建，并且采用手撸 <code>webpack</code> 配置加深印象。</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><ul>\n<li><code>mkdir react-map</code> &#x2F;&#x2F; 创建 react-map 文件夹</li>\n<li><code>cd react-map</code> &#x2F;&#x2F; 进入文件夹</li>\n<li>使用 <code>npm init</code> 初始化项目，按需要进行配置。</li>\n</ul>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><ul>\n<li><code>npm install webpack-cli webpack webpack-bundle-analyzer webpack-dev-server webpack-merge uglifyjs-webpack-plugin html-webpack-plugin extract-text-webpack-plugin optimize-css-assets-webpack-plugin friendly-errors-webpack-plugin --save-dev</code> &#x2F;&#x2F; 安装 webpack （目前已升级到 4）</li>\n<li><code>npm install react react-dom --save</code> &#x2F;&#x2F; 参考：<a href=\"https://facebook.github.io/react/docs/installation.html\">https://facebook.github.io/react/docs/installation.html</a></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>包名</th>\n<th>简介</th>\n<th>作用</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>webpack</code></td>\n<td>模块打包器</td>\n<td>对 <code>react</code> 项目的打包，<code>ES2015+</code> 的代码转换，静态资源处理等</td>\n<td><code>^4.0.1</code></td>\n</tr>\n<tr>\n<td><code>react</code></td>\n<td>js 框架</td>\n<td><code>react</code> 基础框架</td>\n<td><code>^16.2.0</code></td>\n</tr>\n<tr>\n<td><code>react-dom</code></td>\n<td>操作 DOM</td>\n<td>搭配 <code>react</code> 用了操作dom的</td>\n<td><code>^16.2.0</code></td>\n</tr>\n</tbody></table>\n<p>因为需要采用 <code>es2015</code> 语法 所以还应当安装babel-loader以及其他相关依赖, 具体也可以参考 vue 项目配置。</p>\n<ul>\n<li><code>npm install babel-loader babel-core babel-preset-es2015 babel-preset-react babel-eslint --save-dev</code></li>\n</ul>\n<p>样式预处理器保持和现有项目保持一致，任然采用 <code>scss</code>, 但是任然需要处理内联样式和 css 文件。</p>\n<ul>\n<li><code>npm install css-loader style-loader node-sass sass-loader --save-dev</code></li>\n</ul>\n<p>安装 <code>eslint</code> 相关</p>\n<ul>\n<li><code>npm install eslint eslint-config-airbnb eslint-plugin-babel eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react eslint-friendly-formatter --save-dev</code></li>\n</ul>\n<p>安装静态文件 loader 相关</p>\n<ul>\n<li><code>npm install url-loader file-loader portfinder --save-dev</code></li>\n<li><code>npm install postcss-url postcss-loader postcss-import autoprefixer --save-dev</code></li>\n</ul>\n<h2 id=\"webpack-配置\"><a href=\"#webpack-配置\" class=\"headerlink\" title=\"webpack 配置\"></a>webpack 配置</h2><blockquote>\n<p>编写对应的webpack 配置</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"webpack\"><a href=\"#webpack\" class=\"headerlink\" title=\"webpack\"></a>webpack</h1><p>  Webpack 是一个前端资源加载&#x2F;打包工具。它将根据模块的依赖关系进行静态分析，然后将这些模块按照指定的规则生成对应的静态资源。<br>自从 <code>gulp，Grunt</code> 等一些前端工具兴起后，才真正把前端工程化引入，不仅简化了开发流程，更引入了一些前沿思想。</p>","more":"<h2 id=\"webpack-工作方式\"><a href=\"#webpack-工作方式\" class=\"headerlink\" title=\"webpack 工作方式\"></a>webpack 工作方式</h2><p>   把你的项目当做一个整体，通过一个给定的主文件（entry）（如：index.js），Webpack将从这个文件开始找到你的项目的所有<br>依赖文件，使用loaders处理它们，最后打包为一个（或多个）浏览器可识别的JavaScript文件。</p>\n<h2 id=\"webpack-4\"><a href=\"#webpack-4\" class=\"headerlink\" title=\"webpack 4\"></a>webpack 4</h2><p>  实际上在webpack 4之前，webpack有着很多黑点，也催生了后期<code>rollup</code>和<code>parcel</code>。而<code>webpack</code>主要问题存在于：</p>\n<ul>\n<li>配置过于复杂。</li>\n<li>文档缺失，尤其中文文档。</li>\n<li>编译、打包速度过慢。等</li>\n</ul>\n<p>原来对于前端来说，打开编辑器就可以撸代码的日子一去不复返，大概配置前端开发环境就需要一天吧 :smile: 。<br>对于 <code>webpack4</code> 来说，这一个大版本升级做了诸多优化，主要包含如下：</p>\n<ul>\n<li><p>环境: 不再支持 <code>node.js 4</code>, 源代码已升级到更高的<code>ecmascript</code>版本。</p>\n</li>\n<li><p>用法: </p>\n<ul>\n<li>您现在必须在<code>production or development</code>两种模式之间选择（<code>mode or --mode</code>)</li>\n<li><code>production</code>默认提供所有可能的优化，如代码压缩&#x2F;作用域提升等</li>\n<li><code>development</code>模式下允许注释和 <code>eval</code> 下的 <code>source maps</code>。</li>\n<li><code>production</code>模式下不支持 <code>watch</code>，<code>development</code>模式下针对代码变化后的重新打包进行了优化。</li>\n<li><code>production</code>模式下默认提供模块合并（作用域提升）。</li>\n<li>你可以配置 <code>optimization</code> 自定义模式。</li>\n<li><code>process.env.NODE_ENV</code> 的值不需要再定义，默认对应当前模式。</li>\n<li>并且可以设置 <code>none</code> 模式可以禁用所有的功能。</li>\n</ul>\n</li>\n<li><p>语法</p>\n<ul>\n<li>在 webpack 4 中，import() 会返回一个带命名空间(namespace)的对象，这对 ES Module 不会有影响，但对于遵循 commonjs 规范的模块则会加一层包裹。</li>\n<li>在<code>webpack 4</code> 中如果你使用 <code>import（）</code> 导入 <code>CommonJs</code> 模块可能会破坏你的代码。</li>\n</ul>\n</li>\n<li><p>配置</p>\n<blockquote>\n<p>删除了一些常用内置插件：</p>\n</blockquote>\n<ul>\n<li>NoEmitOnErrorsPlugin -&gt; optimization.noEmitOnErrors (生产模式默认)</li>\n<li>ModuleConcatenationPlugin -&gt; optimization.concatenateModules （生产模式默认）</li>\n<li>NamedModulesPlugin -&gt; optimization.namedModules （开发模式默认）。</li>\n<li>删除了 CommonsChunkPlugin，取而代之的是 optimization.splitChunks 和 optimization.runtimeChunk，这提供了细粒度的缓存策略控制</li>\n</ul>\n</li>\n<li><p>JSON处理</p>\n<ul>\n<li><p>webpack现在默认处理JSON。</p>\n<ul>\n<li>将JSON通过加载器转换为JS时，可能需要添加类型：<code>javascript / auto</code>.</li>\n<li>还支持对 JSON 的 Tree Shaking。当使用 ESM 语法 import json 时，webpack 会处理掉JSON Module 中未使用的导出。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>优化</p>\n<ul>\n<li>uglifyjs-webpack-plugin 发布 v1，支持 ES2015</li>\n<li>使用 JSONP 数组来代替 JSONP 函数 –&gt; 异步支持</li>\n</ul>\n</li>\n<li><p>重大功能性更新</p>\n<ol>\n<li>Modules(模块)：</li>\n</ol>\n<ul>\n<li>webpack 现在支持以下文件类型：<ul>\n<li>javascript&#x2F;auto: (webpack 3中的默认类型)支持所有的JS模块系统：CommonJS、AMD、ESM</li>\n<li>javascript&#x2F;esm: EcmaScript 模块，在其他的模块系统中不可用。</li>\n<li>javascript&#x2F;dynamic: 仅支持 CommonJS &amp; AMD，ES moudle 不可用。</li>\n<li>json: 可通过 require 和 import 导入的 JSON 格式的数据(默认为 .json 的文件)</li>\n<li>webassembly&#x2F;experimental: WebAssembly 模块(试验阶段，默认为 .wasm 的文件)。</li>\n</ul>\n</li>\n<li>与<code>javascript/auto</code>相比，<code>javascript/esm</code>更严格地处理<code>ESM</code>文档<ul>\n<li>导入的名称需要在导入的模块上存在。</li>\n<li>动态模块（非esm，即CommonJs）只能通过<code>default</code>导入，其他方式（包括命名空间导入）都会发出错误。</li>\n</ul>\n</li>\n<li>以后缀名为<code>.mjs</code>的模块默认为 <code>javascript/esm</code>。</li>\n<li>WebAssembly模块<ul>\n<li>可以导入其他模块（JS和WASM）。</li>\n<li>从<code>WebAssembly</code>模块导出的模块将通过ESM导入进行验证。</li>\n<li>只能用于异步模块。</li>\n<li>WebAssembly为实验性功能。</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>Optimization(优化):</li>\n</ol>\n<ul>\n<li>sideEffects: <code>package.json</code>现在支持配置<code>false</code>。<ul>\n<li><code>package.json</code>中的<code>sideEffects</code>还支持<code>glob</code>表达式和<code>glob</code>表达式的数组。</li>\n</ul>\n</li>\n<li>使用 <code>JSONP</code> 数组替代 <code>JSONP</code> 函数，异步脚本支持，不再依赖于加载顺序。</li>\n<li>引入了新的<code>optimization.splitChunks</code>选项 <a href=\"https://gist.github.com/sokra/1522d586b8e5c0f5072d7565c2bee693\">detail</a>。</li>\n<li>无用代码现在由<code>webpack</code>自动处理。<ul>\n<li>Before: 在 <code>Uglify</code> 中处理无用代码。</li>\n<li>现在： <code>webpack</code> 默认处理。</li>\n<li>这可以防止无用代码中存在<code>import()</code>时出现错误。</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>Syntax(语法):</li>\n</ol>\n<ul>\n<li>通过<code>import()</code>可以支持<code>webpackInclude</code>和<code>webpackExclude</code>。它们允许在使用动态表达式过滤文件。</li>\n<li>减少使用<code>System.import()</code>现在<code> 使用</code>System.import()&#96;会发出警告。<ul>\n<li>你可以配置 <code>Rule.parser.system: true</code> 禁用警告。</li>\n<li>配置 <code>Rule.parser.system: false</code>可以禁用 <code>System.import</code>。</li>\n</ul>\n</li>\n</ul>\n<ol start=\"4\">\n<li>Configuration(配置)：</li>\n</ol>\n<ul>\n<li>现在可以使用<code>module.rules[].resolve</code>来配置解析。它将合并到全局配置中。</li>\n<li>在<code>production</code> 模式，<code>optimization.minimize</code> 默认打开； <code>development</code> 模式默认关闭。</li>\n</ul>\n<ol start=\"5\">\n<li>Usage(用法)：</li>\n</ol>\n<ul>\n<li>部分插件配置现在将被验证。</li>\n<li><code>CLI</code>已转移到<code>webpack-cli</code>，您需要安装<code>webpack-cli</code>才能使用<code>CLI</code>。</li>\n<li>[]</li>\n</ul>\n<ol start=\"6\">\n<li>Performance(性能提升)：</li>\n</ol>\n<ul>\n<li><code>UglifyJs</code> 现在默认进行缓存。</li>\n<li>多重性能改进，特别是对于频繁修改的文件的重新编译。</li>\n<li>对于<code>RemoveParentModulesPlugin</code>的性能改进。</li>\n</ul>\n<ol start=\"7\">\n<li>Stats(统计)：</li>\n</ol>\n<ul>\n<li>统计信息可以显示嵌套中的模块。</li>\n</ul>\n</li>\n</ul>\n<p>其他更多信息可以查看 <a href=\"https://github.com/webpack/webpack/releases\">releases</a>。</p>\n<h1 id=\"从-angular1-x-到-vue-再到-react-的心路历程\"><a href=\"#从-angular1-x-到-vue-再到-react-的心路历程\" class=\"headerlink\" title=\"从 angular1.x 到 vue 再到 react 的心路历程\"></a>从 angular1.x 到 vue 再到 react 的心路历程</h1><p>  网上有太多的文章去讨论目前前端三大框架的优缺点，其实有些时候可以说适合你的才是<br>最好的，没必要过多的纠结好或不好的问题。从开始的 <code>jquery</code> 的原生态开发到 <code>angularjs</code><br>的双向绑定再到部门技术选型从而切到 <code>vuejs</code> （从1到2）再到现在对 <code>react</code>的尝试，<br>可谓是三大框架走了个遍。有些时候不得不感叹 <code>我圈真乱 斜眼笑</code>。</p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><p>  因为目前项目使用的 <code>vue</code> 框架，并且对 <code>vue</code> 相关项目配置有所了解，所以项目架构直接采用<br><code>webpack + es2015 + react</code> 构建，并且采用手撸 <code>webpack</code> 配置加深印象。</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><ul>\n<li><code>mkdir react-map</code> &#x2F;&#x2F; 创建 react-map 文件夹</li>\n<li><code>cd react-map</code> &#x2F;&#x2F; 进入文件夹</li>\n<li>使用 <code>npm init</code> 初始化项目，按需要进行配置。</li>\n</ul>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><ul>\n<li><code>npm install webpack-cli webpack webpack-bundle-analyzer webpack-dev-server webpack-merge uglifyjs-webpack-plugin html-webpack-plugin extract-text-webpack-plugin optimize-css-assets-webpack-plugin friendly-errors-webpack-plugin --save-dev</code> &#x2F;&#x2F; 安装 webpack （目前已升级到 4）</li>\n<li><code>npm install react react-dom --save</code> &#x2F;&#x2F; 参考：<a href=\"https://facebook.github.io/react/docs/installation.html\">https://facebook.github.io/react/docs/installation.html</a></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>包名</th>\n<th>简介</th>\n<th>作用</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>webpack</code></td>\n<td>模块打包器</td>\n<td>对 <code>react</code> 项目的打包，<code>ES2015+</code> 的代码转换，静态资源处理等</td>\n<td><code>^4.0.1</code></td>\n</tr>\n<tr>\n<td><code>react</code></td>\n<td>js 框架</td>\n<td><code>react</code> 基础框架</td>\n<td><code>^16.2.0</code></td>\n</tr>\n<tr>\n<td><code>react-dom</code></td>\n<td>操作 DOM</td>\n<td>搭配 <code>react</code> 用了操作dom的</td>\n<td><code>^16.2.0</code></td>\n</tr>\n</tbody></table>\n<p>因为需要采用 <code>es2015</code> 语法 所以还应当安装babel-loader以及其他相关依赖, 具体也可以参考 vue 项目配置。</p>\n<ul>\n<li><code>npm install babel-loader babel-core babel-preset-es2015 babel-preset-react babel-eslint --save-dev</code></li>\n</ul>\n<p>样式预处理器保持和现有项目保持一致，任然采用 <code>scss</code>, 但是任然需要处理内联样式和 css 文件。</p>\n<ul>\n<li><code>npm install css-loader style-loader node-sass sass-loader --save-dev</code></li>\n</ul>\n<p>安装 <code>eslint</code> 相关</p>\n<ul>\n<li><code>npm install eslint eslint-config-airbnb eslint-plugin-babel eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react eslint-friendly-formatter --save-dev</code></li>\n</ul>\n<p>安装静态文件 loader 相关</p>\n<ul>\n<li><code>npm install url-loader file-loader portfinder --save-dev</code></li>\n<li><code>npm install postcss-url postcss-loader postcss-import autoprefixer --save-dev</code></li>\n</ul>\n<h2 id=\"webpack-配置\"><a href=\"#webpack-配置\" class=\"headerlink\" title=\"webpack 配置\"></a>webpack 配置</h2><blockquote>\n<p>编写对应的webpack 配置</p>\n</blockquote>"},{"title":"利用travis持续集成工具自动部署博客","date":"2017-04-08T06:50:00.000Z","_content":"\n# 简介\n\n  完善一下早期文章。虽然网上已有很多关于博客自动部署的教程，但是真正实践起来并不是一番丰顺。所以\n将踩过的坑记录下来也是必要的。\n\n<!--more-->\n\n# 自动部署方案选择\n\n## Webhook\n\n  Webhook，也就是人们常说的钩子，是一个很有用的工具。你可以通过定制 Webhook 来监测你在 Github \n上的各种事件，包括提交合并分支等事件。并且github和gitlab对webhook的支持比较好。\n  主要思路就是当有新的 ``push`` 操作后，触发webhook的回调，进行仓库拉取更新和编译，并且将编译后的\n文件推送到 ``git`` 仓库或者特定服务器上，就完成了自动部署。\n  但是此方案需要有一个服务器，所以暂时不考虑。\n  \n## Travis CI\n\n  Travis CI 是目前新兴的开源持续集成构建项目。目前我的大多数的github项目都已经移入到Travis CI的构建队列中。\n\n### travis配置\n\n - 开启travis中要构建的项目，并指定触发条件。\n \n ![配置](http://oo4em1zi0.bkt.clouddn.com/website/images/travisgitres.jpg)\n ![触发条件](http://oo4em1zi0.bkt.clouddn.com/website/images/travismenu.jpg)\n \n - 配置环境变量Environment Variables，主要目的是将HEXO_ALGOLIA_INDEXING_KEY(algolia的key)和TRAVIS_GITHUB（Github的Access Token）\n   以私有方式配置到构建环境中。\n   \n - 配置 ``.travis.yml`` 配置文件, 安装node，配置主题，hexo编译，自动配置algolia搜索字段的更新，将构建结果 `push`\n   到 ``github`` 对应仓库。\n \n  ```bash\n    language: node_js\n    node_js: node\n    cache:\n      directories:\n        - node_modules\n    before_install:\n    - npm install -g hexo-cli\n    install: npm install\n    script:\n    - git clone https://github.com/sakitam-fdd/hexo-theme-next.git themes/next\n    - hexo clean\n    - hexo generate\n    - export HEXO_ALGOLIA_INDEXING_KEY=${HEXO_ALGOLIA_INDEXING_KEY}\n    - hexo algolia\n    after_script:\n    - cd ./dist\n    - git init\n    - git config --global user.name 'sakitam-fdd'\n    - git config --global user.email 'smilefdd@gmail.com'\n    - git add .\n    - git commit -m \"update my website\"\n    - git push --force --quiet \"https://${TRAVIS_GITHUB}@github.com/sakitam-fdd/sakitam-fdd.github.io\" master:master\n  ```\n  \n\n## 测试结果\n\n  推送一篇新主题到 ``website`` 仓库，观察 [travis-ci](https://www.travis-ci.org/sakitam-fdd/website)构建过程\n当出现 ``Done. Your build exited with 0.``后表示构建并且更新blog成功，稍等一分钟可以刷新你的blog查看最新结果。\n\n![成功](http://oo4em1zi0.bkt.clouddn.com/website/images/travistravis.jpg)\n","source":"_posts/travis.md","raw":"---\ntitle: 利用travis持续集成工具自动部署博客\ndate: 2017-04-08 14:50:00\ncategories:\n- 前端\n- hexo\ntags: \n- 持续集成\n- github\n- hexo\n---\n\n# 简介\n\n  完善一下早期文章。虽然网上已有很多关于博客自动部署的教程，但是真正实践起来并不是一番丰顺。所以\n将踩过的坑记录下来也是必要的。\n\n<!--more-->\n\n# 自动部署方案选择\n\n## Webhook\n\n  Webhook，也就是人们常说的钩子，是一个很有用的工具。你可以通过定制 Webhook 来监测你在 Github \n上的各种事件，包括提交合并分支等事件。并且github和gitlab对webhook的支持比较好。\n  主要思路就是当有新的 ``push`` 操作后，触发webhook的回调，进行仓库拉取更新和编译，并且将编译后的\n文件推送到 ``git`` 仓库或者特定服务器上，就完成了自动部署。\n  但是此方案需要有一个服务器，所以暂时不考虑。\n  \n## Travis CI\n\n  Travis CI 是目前新兴的开源持续集成构建项目。目前我的大多数的github项目都已经移入到Travis CI的构建队列中。\n\n### travis配置\n\n - 开启travis中要构建的项目，并指定触发条件。\n \n ![配置](http://oo4em1zi0.bkt.clouddn.com/website/images/travisgitres.jpg)\n ![触发条件](http://oo4em1zi0.bkt.clouddn.com/website/images/travismenu.jpg)\n \n - 配置环境变量Environment Variables，主要目的是将HEXO_ALGOLIA_INDEXING_KEY(algolia的key)和TRAVIS_GITHUB（Github的Access Token）\n   以私有方式配置到构建环境中。\n   \n - 配置 ``.travis.yml`` 配置文件, 安装node，配置主题，hexo编译，自动配置algolia搜索字段的更新，将构建结果 `push`\n   到 ``github`` 对应仓库。\n \n  ```bash\n    language: node_js\n    node_js: node\n    cache:\n      directories:\n        - node_modules\n    before_install:\n    - npm install -g hexo-cli\n    install: npm install\n    script:\n    - git clone https://github.com/sakitam-fdd/hexo-theme-next.git themes/next\n    - hexo clean\n    - hexo generate\n    - export HEXO_ALGOLIA_INDEXING_KEY=${HEXO_ALGOLIA_INDEXING_KEY}\n    - hexo algolia\n    after_script:\n    - cd ./dist\n    - git init\n    - git config --global user.name 'sakitam-fdd'\n    - git config --global user.email 'smilefdd@gmail.com'\n    - git add .\n    - git commit -m \"update my website\"\n    - git push --force --quiet \"https://${TRAVIS_GITHUB}@github.com/sakitam-fdd/sakitam-fdd.github.io\" master:master\n  ```\n  \n\n## 测试结果\n\n  推送一篇新主题到 ``website`` 仓库，观察 [travis-ci](https://www.travis-ci.org/sakitam-fdd/website)构建过程\n当出现 ``Done. Your build exited with 0.``后表示构建并且更新blog成功，稍等一分钟可以刷新你的blog查看最新结果。\n\n![成功](http://oo4em1zi0.bkt.clouddn.com/website/images/travistravis.jpg)\n","slug":"travis","published":1,"updated":"2022-05-10T05:50:55.137Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl31g417y000cvk6bh39daylz","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>  完善一下早期文章。虽然网上已有很多关于博客自动部署的教程，但是真正实践起来并不是一番丰顺。所以<br>将踩过的坑记录下来也是必要的。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"自动部署方案选择\"><a href=\"#自动部署方案选择\" class=\"headerlink\" title=\"自动部署方案选择\"></a>自动部署方案选择</h1><h2 id=\"Webhook\"><a href=\"#Webhook\" class=\"headerlink\" title=\"Webhook\"></a>Webhook</h2><p>  Webhook，也就是人们常说的钩子，是一个很有用的工具。你可以通过定制 Webhook 来监测你在 Github<br>上的各种事件，包括提交合并分支等事件。并且github和gitlab对webhook的支持比较好。<br>  主要思路就是当有新的 <code>push</code> 操作后，触发webhook的回调，进行仓库拉取更新和编译，并且将编译后的<br>文件推送到 <code>git</code> 仓库或者特定服务器上，就完成了自动部署。<br>  但是此方案需要有一个服务器，所以暂时不考虑。</p>\n<h2 id=\"Travis-CI\"><a href=\"#Travis-CI\" class=\"headerlink\" title=\"Travis CI\"></a>Travis CI</h2><p>  Travis CI 是目前新兴的开源持续集成构建项目。目前我的大多数的github项目都已经移入到Travis CI的构建队列中。</p>\n<h3 id=\"travis配置\"><a href=\"#travis配置\" class=\"headerlink\" title=\"travis配置\"></a>travis配置</h3><ul>\n<li>开启travis中要构建的项目，并指定触发条件。</li>\n</ul>\n<p> <img src=\"http://oo4em1zi0.bkt.clouddn.com/website/images/travisgitres.jpg\" alt=\"配置\"><br> <img src=\"http://oo4em1zi0.bkt.clouddn.com/website/images/travismenu.jpg\" alt=\"触发条件\"></p>\n<ul>\n<li><p>配置环境变量Environment Variables，主要目的是将HEXO_ALGOLIA_INDEXING_KEY(algolia的key)和TRAVIS_GITHUB（Github的Access Token）<br>以私有方式配置到构建环境中。</p>\n</li>\n<li><p>配置 <code>.travis.yml</code> 配置文件, 安装node，配置主题，hexo编译，自动配置algolia搜索字段的更新，将构建结果 <code>push</code><br>到 <code>github</code> 对应仓库。</p>\n</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: node_js</span><br><span class=\"line\">node_js: node</span><br><span class=\"line\">cache:</span><br><span class=\"line\">  directories:</span><br><span class=\"line\">    - node_modules</span><br><span class=\"line\">before_install:</span><br><span class=\"line\">- npm install -g hexo-cli</span><br><span class=\"line\">install: npm install</span><br><span class=\"line\">script:</span><br><span class=\"line\">- git <span class=\"built_in\">clone</span> https://github.com/sakitam-fdd/hexo-theme-next.git themes/next</span><br><span class=\"line\">- hexo clean</span><br><span class=\"line\">- hexo generate</span><br><span class=\"line\">- <span class=\"built_in\">export</span> HEXO_ALGOLIA_INDEXING_KEY=<span class=\"variable\">$&#123;HEXO_ALGOLIA_INDEXING_KEY&#125;</span></span><br><span class=\"line\">- hexo algolia</span><br><span class=\"line\">after_script:</span><br><span class=\"line\">- <span class=\"built_in\">cd</span> ./dist</span><br><span class=\"line\">- git init</span><br><span class=\"line\">- git config --global user.name <span class=\"string\">&#x27;sakitam-fdd&#x27;</span></span><br><span class=\"line\">- git config --global user.email <span class=\"string\">&#x27;smilefdd@gmail.com&#x27;</span></span><br><span class=\"line\">- git add .</span><br><span class=\"line\">- git commit -m <span class=\"string\">&quot;update my website&quot;</span></span><br><span class=\"line\">- git push --force --quiet <span class=\"string\">&quot;https://<span class=\"variable\">$&#123;TRAVIS_GITHUB&#125;</span>@github.com/sakitam-fdd/sakitam-fdd.github.io&quot;</span> master:master</span><br></pre></td></tr></table></figure>\n<h2 id=\"测试结果\"><a href=\"#测试结果\" class=\"headerlink\" title=\"测试结果\"></a>测试结果</h2><p>  推送一篇新主题到 <code>website</code> 仓库，观察 <a href=\"https://www.travis-ci.org/sakitam-fdd/website\">travis-ci</a>构建过程<br>当出现 <code>Done. Your build exited with 0.</code>后表示构建并且更新blog成功，稍等一分钟可以刷新你的blog查看最新结果。</p>\n<p><img src=\"http://oo4em1zi0.bkt.clouddn.com/website/images/travistravis.jpg\" alt=\"成功\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>  完善一下早期文章。虽然网上已有很多关于博客自动部署的教程，但是真正实践起来并不是一番丰顺。所以<br>将踩过的坑记录下来也是必要的。</p>","more":"<h1 id=\"自动部署方案选择\"><a href=\"#自动部署方案选择\" class=\"headerlink\" title=\"自动部署方案选择\"></a>自动部署方案选择</h1><h2 id=\"Webhook\"><a href=\"#Webhook\" class=\"headerlink\" title=\"Webhook\"></a>Webhook</h2><p>  Webhook，也就是人们常说的钩子，是一个很有用的工具。你可以通过定制 Webhook 来监测你在 Github<br>上的各种事件，包括提交合并分支等事件。并且github和gitlab对webhook的支持比较好。<br>  主要思路就是当有新的 <code>push</code> 操作后，触发webhook的回调，进行仓库拉取更新和编译，并且将编译后的<br>文件推送到 <code>git</code> 仓库或者特定服务器上，就完成了自动部署。<br>  但是此方案需要有一个服务器，所以暂时不考虑。</p>\n<h2 id=\"Travis-CI\"><a href=\"#Travis-CI\" class=\"headerlink\" title=\"Travis CI\"></a>Travis CI</h2><p>  Travis CI 是目前新兴的开源持续集成构建项目。目前我的大多数的github项目都已经移入到Travis CI的构建队列中。</p>\n<h3 id=\"travis配置\"><a href=\"#travis配置\" class=\"headerlink\" title=\"travis配置\"></a>travis配置</h3><ul>\n<li>开启travis中要构建的项目，并指定触发条件。</li>\n</ul>\n<p> <img src=\"http://oo4em1zi0.bkt.clouddn.com/website/images/travisgitres.jpg\" alt=\"配置\"><br> <img src=\"http://oo4em1zi0.bkt.clouddn.com/website/images/travismenu.jpg\" alt=\"触发条件\"></p>\n<ul>\n<li><p>配置环境变量Environment Variables，主要目的是将HEXO_ALGOLIA_INDEXING_KEY(algolia的key)和TRAVIS_GITHUB（Github的Access Token）<br>以私有方式配置到构建环境中。</p>\n</li>\n<li><p>配置 <code>.travis.yml</code> 配置文件, 安装node，配置主题，hexo编译，自动配置algolia搜索字段的更新，将构建结果 <code>push</code><br>到 <code>github</code> 对应仓库。</p>\n</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: node_js</span><br><span class=\"line\">node_js: node</span><br><span class=\"line\">cache:</span><br><span class=\"line\">  directories:</span><br><span class=\"line\">    - node_modules</span><br><span class=\"line\">before_install:</span><br><span class=\"line\">- npm install -g hexo-cli</span><br><span class=\"line\">install: npm install</span><br><span class=\"line\">script:</span><br><span class=\"line\">- git <span class=\"built_in\">clone</span> https://github.com/sakitam-fdd/hexo-theme-next.git themes/next</span><br><span class=\"line\">- hexo clean</span><br><span class=\"line\">- hexo generate</span><br><span class=\"line\">- <span class=\"built_in\">export</span> HEXO_ALGOLIA_INDEXING_KEY=<span class=\"variable\">$&#123;HEXO_ALGOLIA_INDEXING_KEY&#125;</span></span><br><span class=\"line\">- hexo algolia</span><br><span class=\"line\">after_script:</span><br><span class=\"line\">- <span class=\"built_in\">cd</span> ./dist</span><br><span class=\"line\">- git init</span><br><span class=\"line\">- git config --global user.name <span class=\"string\">&#x27;sakitam-fdd&#x27;</span></span><br><span class=\"line\">- git config --global user.email <span class=\"string\">&#x27;smilefdd@gmail.com&#x27;</span></span><br><span class=\"line\">- git add .</span><br><span class=\"line\">- git commit -m <span class=\"string\">&quot;update my website&quot;</span></span><br><span class=\"line\">- git push --force --quiet <span class=\"string\">&quot;https://<span class=\"variable\">$&#123;TRAVIS_GITHUB&#125;</span>@github.com/sakitam-fdd/sakitam-fdd.github.io&quot;</span> master:master</span><br></pre></td></tr></table></figure>\n<h2 id=\"测试结果\"><a href=\"#测试结果\" class=\"headerlink\" title=\"测试结果\"></a>测试结果</h2><p>  推送一篇新主题到 <code>website</code> 仓库，观察 <a href=\"https://www.travis-ci.org/sakitam-fdd/website\">travis-ci</a>构建过程<br>当出现 <code>Done. Your build exited with 0.</code>后表示构建并且更新blog成功，稍等一分钟可以刷新你的blog查看最新结果。</p>\n<p><img src=\"http://oo4em1zi0.bkt.clouddn.com/website/images/travistravis.jpg\" alt=\"成功\"></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cl31g417r0003vk6bc2sia3zt","category_id":"cl31g417x000avk6bdbnw3lh6","_id":"cl31g4185000ivk6b579d3ibn"},{"post_id":"cl31g417o0001vk6b4us6fzod","category_id":"cl31g417t0004vk6b8tqdb4ke","_id":"cl31g4189000ovk6bbg4l2n0y"},{"post_id":"cl31g417o0001vk6b4us6fzod","category_id":"cl31g4187000kvk6b30tigf7i","_id":"cl31g418b000rvk6bgecl49y8"},{"post_id":"cl31g417w0009vk6bffosavke","category_id":"cl31g4188000mvk6b5cfm69rn","_id":"cl31g418c000uvk6b2nvv1pqf"},{"post_id":"cl31g417y000cvk6bh39daylz","category_id":"cl31g417t0004vk6b8tqdb4ke","_id":"cl31g418d000yvk6b6a96cb9w"},{"post_id":"cl31g417y000cvk6bh39daylz","category_id":"cl31g4187000kvk6b30tigf7i","_id":"cl31g418f0012vk6b4ecmf1m5"},{"post_id":"cl31g417u0007vk6b3wib04mw","category_id":"cl31g417t0004vk6b8tqdb4ke","_id":"cl31g418f0015vk6b8dlrg90h"},{"post_id":"cl31g417u0007vk6b3wib04mw","category_id":"cl31g418c000tvk6b848pewst","_id":"cl31g418g0017vk6bhaoy4owk"},{"post_id":"cl31g417v0008vk6b629rbqvy","category_id":"cl31g4185000hvk6bem1c40df","_id":"cl31g418g0018vk6bfdgs61qu"},{"post_id":"cl31g417v0008vk6b629rbqvy","category_id":"cl31g418e0010vk6b4zp782p9","_id":"cl31g418h001avk6b1zs58zta"}],"PostTag":[{"post_id":"cl31g417o0001vk6b4us6fzod","tag_id":"cl31g417u0005vk6b8nug7dgj","_id":"cl31g4183000fvk6bczj302q9"},{"post_id":"cl31g417o0001vk6b4us6fzod","tag_id":"cl31g417x000bvk6b2ruwbkg6","_id":"cl31g4184000gvk6bcyedhncf"},{"post_id":"cl31g417r0003vk6bc2sia3zt","tag_id":"cl31g417z000evk6b6l6d0gjx","_id":"cl31g418b000svk6bhhie9nbt"},{"post_id":"cl31g417r0003vk6bc2sia3zt","tag_id":"cl31g4186000jvk6bftdi1zt8","_id":"cl31g418c000vvk6b0us10sme"},{"post_id":"cl31g417r0003vk6bc2sia3zt","tag_id":"cl31g4187000lvk6b9zqr605n","_id":"cl31g418d000xvk6b1cl3dpyb"},{"post_id":"cl31g417r0003vk6bc2sia3zt","tag_id":"cl31g4189000nvk6b6m09dyu2","_id":"cl31g418d000zvk6b1zplg2tn"},{"post_id":"cl31g417u0007vk6b3wib04mw","tag_id":"cl31g4186000jvk6bftdi1zt8","_id":"cl31g418f0013vk6bf23gc1bc"},{"post_id":"cl31g417v0008vk6b629rbqvy","tag_id":"cl31g418c000wvk6bc3n97vu8","_id":"cl31g418f0014vk6beky69sy9"},{"post_id":"cl31g417w0009vk6bffosavke","tag_id":"cl31g418e0011vk6b6vttcr5k","_id":"cl31g418h001bvk6bgcee2st5"},{"post_id":"cl31g417w0009vk6bffosavke","tag_id":"cl31g418f0016vk6b1kbe6vm5","_id":"cl31g418h001cvk6bd8o41a8f"},{"post_id":"cl31g417y000cvk6bh39daylz","tag_id":"cl31g418g0019vk6b4bh14zyu","_id":"cl31g418k001evk6b0kqy8c55"},{"post_id":"cl31g417y000cvk6bh39daylz","tag_id":"cl31g418h001dvk6bffj93m0k","_id":"cl31g418l001fvk6b1ode0u3s"},{"post_id":"cl31g417y000cvk6bh39daylz","tag_id":"cl31g417x000bvk6b2ruwbkg6","_id":"cl31g418l001gvk6b3bdx2xsy"}],"Tag":[{"name":"前端","_id":"cl31g417u0005vk6b8nug7dgj"},{"name":"hexo","_id":"cl31g417x000bvk6b2ruwbkg6"},{"name":"linux","_id":"cl31g417z000evk6b6l6d0gjx"},{"name":"nodejs","_id":"cl31g4186000jvk6bftdi1zt8"},{"name":"soft","_id":"cl31g4187000lvk6b9zqr605n"},{"name":"git","_id":"cl31g4189000nvk6b6m09dyu2"},{"name":"GIS","_id":"cl31g418c000wvk6bc3n97vu8"},{"name":"react","_id":"cl31g418e0011vk6b6vttcr5k"},{"name":"webpack","_id":"cl31g418f0016vk6b1kbe6vm5"},{"name":"持续集成","_id":"cl31g418g0019vk6b4bh14zyu"},{"name":"github","_id":"cl31g418h001dvk6bffj93m0k"}]}}